-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pix_threshold_pix_threshold_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    VideoIn_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    VideoIn_TVALID : IN STD_LOGIC;
    VideoIn_TREADY : OUT STD_LOGIC;
    VideoOut_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    VideoOut_TVALID : OUT STD_LOGIC;
    VideoOut_TREADY : IN STD_LOGIC;
    threshold_value : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of pix_threshold_pix_threshold_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_103 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal DataBuf_Data_V : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal VideoIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_287_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_36_fu_1362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal VideoOut_TDATA_blk_n : STD_LOGIC;
    signal tmp_1_fu_305_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal and_ln42_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal p_Val2_s_reg_219 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op27_write_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal inFrame_reg_229 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_buf_User_V_reg_243 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal tmp_2_fu_330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_254 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln66_fu_1370_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal trunc_ln26_fu_295_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal output_buf_User_V_1_fu_196 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln38_fu_321_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln44_fu_358_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln60_fu_1357_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln_fu_313_p3 : STD_LOGIC_VECTOR (259 downto 0);
    signal trunc_ln628_fu_326_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1019_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_350_p3 : STD_LOGIC_VECTOR (259 downto 0);
    signal trunc_ln628_1_fu_363_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_386_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_1_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_1_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_415_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_2_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_2_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_444_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_3_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_3_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_473_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_4_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_4_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_502_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_5_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_5_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_531_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_6_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_6_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_560_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_7_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_7_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_589_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_8_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_8_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_618_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_9_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_9_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_647_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_10_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_10_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_676_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_11_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_11_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_705_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_12_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_12_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_734_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_13_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_13_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_763_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_14_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_14_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_792_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_15_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_15_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_821_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_16_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_16_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_850_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_17_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_17_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_879_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_18_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_18_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_908_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_19_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_19_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_937_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_20_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_20_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_966_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_21_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_21_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_995_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_22_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_22_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1024_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_23_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_23_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1053_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_24_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_24_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1082_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_25_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_25_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1111_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_26_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_26_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1140_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_27_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_27_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1169_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_28_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_28_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1198_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_29_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_29_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1227_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_30_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_30_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1256_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1031_31_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_31_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln345_30_fu_1248_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_29_fu_1219_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_28_fu_1190_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_27_fu_1161_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_26_fu_1132_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_25_fu_1103_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_24_fu_1074_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_23_fu_1045_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_22_fu_1016_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_21_fu_987_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_20_fu_958_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_19_fu_929_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_18_fu_900_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_17_fu_871_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_16_fu_842_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_15_fu_813_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_14_fu_784_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_13_fu_755_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_12_fu_726_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_11_fu_697_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_10_fu_668_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_9_fu_639_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_8_fu_610_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_7_fu_581_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_6_fu_552_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_5_fu_523_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_4_fu_494_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_3_fu_465_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_2_fu_436_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_1_fu_407_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln345_fu_378_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1277_p33 : STD_LOGIC_VECTOR (248 downto 0);
    signal sext_ln345_fu_1345_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_35_fu_1349_p3 : STD_LOGIC_VECTOR (259 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_condition_95 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    DataBuf_Data_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                DataBuf_Data_V <= trunc_ln26_fu_295_p1;
            elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                DataBuf_Data_V <= trunc_ln66_fu_1370_p1;
            end if; 
        end if;
    end process;

    inFrame_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_95)) then
                if ((tmp_fu_287_p3 = ap_const_lv1_1)) then 
                    inFrame_reg_229 <= ap_const_lv1_0;
                elsif ((tmp_fu_287_p3 = ap_const_lv1_0)) then 
                    inFrame_reg_229 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    output_buf_User_V_1_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                output_buf_User_V_1_fu_196 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_229 = ap_const_lv1_1))) then 
                output_buf_User_V_1_fu_196 <= p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_254;
            end if; 
        end if;
    end process;

    output_buf_User_V_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_330_p3 = ap_const_lv1_1))) then 
                output_buf_User_V_reg_243 <= p_Val2_s_reg_219;
            elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                output_buf_User_V_reg_243 <= VideoIn_TDATA(259 downto 256);
            end if; 
        end if;
    end process;

    p_Val2_s_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_95)) then
                if ((tmp_fu_287_p3 = ap_const_lv1_1)) then 
                    p_Val2_s_reg_219 <= output_buf_User_V_1_fu_196;
                elsif ((tmp_fu_287_p3 = ap_const_lv1_0)) then 
                    p_Val2_s_reg_219 <= VideoIn_TDATA(259 downto 256);
                end if;
            end if; 
        end if;
    end process;

    p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_254 <= output_buf_User_V_reg_243;
            elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_330_p3 = ap_const_lv1_0))) then 
                p_ZZ18pix_threshold_procRN3hls6streamI12video_structLi0EEES3_7ap_uintILi8EEE7Data_reg_254 <= p_Val2_s_reg_219;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_36_fu_1362_p3, ap_CS_fsm_state3, and_ln42_fu_344_p2, ap_predicate_op27_write_state2, ap_block_state2_io, inFrame_reg_229, ap_block_state3_io, tmp_2_fu_330_p3, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_330_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_2_fu_330_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_229 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    VideoIn_TDATA_blk_n_assign_proc : process(VideoIn_TVALID, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_36_fu_1362_p3)
    begin
        if ((((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoIn_TDATA_blk_n <= VideoIn_TVALID;
        else 
            VideoIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoIn_TREADY_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_36_fu_1362_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            VideoIn_TREADY <= ap_const_logic_1;
        else 
            VideoIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    VideoOut_TDATA_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_36_fu_1362_p3, ap_CS_fsm_state3, and_ln42_fu_344_p2, ap_predicate_op27_write_state2, zext_ln38_fu_321_p1, zext_ln44_fu_358_p1, zext_ln60_fu_1357_p1)
    begin
        if ((not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            VideoOut_TDATA <= zext_ln60_fu_1357_p1;
        elsif ((not(((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY))) and (ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            VideoOut_TDATA <= zext_ln44_fu_358_p1;
        elsif ((not((((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            VideoOut_TDATA <= zext_ln38_fu_321_p1;
        else 
            VideoOut_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    VideoOut_TDATA_blk_n_assign_proc : process(VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_1_fu_305_p3, ap_CS_fsm_state3, and_ln42_fu_344_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((tmp_1_fu_305_p3 = ap_const_lv1_0) and (tmp_fu_287_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            VideoOut_TDATA_blk_n <= VideoOut_TREADY;
        else 
            VideoOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    VideoOut_TVALID_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_CS_fsm_state4, tmp_36_fu_1362_p3, ap_CS_fsm_state3, and_ln42_fu_344_p2, ap_predicate_op27_write_state2, ap_block_state2_io, ap_block_state3_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) and (ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            VideoOut_TVALID <= ap_const_logic_1;
        else 
            VideoOut_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    and_ln42_fu_344_p2 <= (xor_ln1019_fu_338_p2 and trunc_ln628_fu_326_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_fu_287_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(VideoOut_TREADY, and_ln42_fu_344_p2, ap_block_state3_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state3_io) or ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY)))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_36_fu_1362_p3)
    begin
        if (((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_block_state2_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_fu_287_p3, ap_predicate_op27_write_state2)
    begin
                ap_block_state2 <= (((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)));
    end process;


    ap_block_state2_io_assign_proc : process(VideoOut_TREADY, ap_predicate_op27_write_state2)
    begin
                ap_block_state2_io <= ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state3_assign_proc : process(VideoOut_TREADY, and_ln42_fu_344_p2)
    begin
                ap_block_state3 <= ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state3_io_assign_proc : process(VideoOut_TREADY, and_ln42_fu_344_p2)
    begin
                ap_block_state3_io <= ((ap_const_lv1_1 = and_ln42_fu_344_p2) and (ap_const_logic_0 = VideoOut_TREADY));
    end process;


    ap_block_state4_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, tmp_36_fu_1362_p3)
    begin
                ap_block_state4 <= ((ap_const_logic_0 = VideoOut_TREADY) or ((tmp_36_fu_1362_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)));
    end process;


    ap_condition_95_assign_proc : process(VideoIn_TVALID, VideoOut_TREADY, ap_CS_fsm_state2, tmp_fu_287_p3, ap_predicate_op27_write_state2, ap_block_state2_io)
    begin
                ap_condition_95 <= (not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op27_write_state2 = ap_const_boolean_1) and (ap_const_logic_0 = VideoOut_TREADY)) or ((tmp_fu_287_p3 = ap_const_lv1_0) and (ap_const_logic_0 = VideoIn_TVALID)))) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, inFrame_reg_229, ap_CS_fsm_state5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_229 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op27_write_state2_assign_proc : process(tmp_fu_287_p3, tmp_1_fu_305_p3)
    begin
                ap_predicate_op27_write_state2 <= ((tmp_1_fu_305_p3 = ap_const_lv1_0) and (tmp_fu_287_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(inFrame_reg_229, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (inFrame_reg_229 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1031_10_fu_657_p2 <= "1" when (unsigned(tmp_13_fu_647_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_11_fu_686_p2 <= "1" when (unsigned(tmp_14_fu_676_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_12_fu_715_p2 <= "1" when (unsigned(tmp_15_fu_705_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_13_fu_744_p2 <= "1" when (unsigned(tmp_16_fu_734_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_14_fu_773_p2 <= "1" when (unsigned(tmp_17_fu_763_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_15_fu_802_p2 <= "1" when (unsigned(tmp_18_fu_792_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_16_fu_831_p2 <= "1" when (unsigned(tmp_19_fu_821_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_17_fu_860_p2 <= "1" when (unsigned(tmp_20_fu_850_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_18_fu_889_p2 <= "1" when (unsigned(tmp_21_fu_879_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_19_fu_918_p2 <= "1" when (unsigned(tmp_22_fu_908_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_1_fu_396_p2 <= "1" when (unsigned(tmp_4_fu_386_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_20_fu_947_p2 <= "1" when (unsigned(tmp_23_fu_937_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_21_fu_976_p2 <= "1" when (unsigned(tmp_24_fu_966_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_22_fu_1005_p2 <= "1" when (unsigned(tmp_25_fu_995_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_23_fu_1034_p2 <= "1" when (unsigned(tmp_26_fu_1024_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_24_fu_1063_p2 <= "1" when (unsigned(tmp_27_fu_1053_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_25_fu_1092_p2 <= "1" when (unsigned(tmp_28_fu_1082_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_26_fu_1121_p2 <= "1" when (unsigned(tmp_29_fu_1111_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_27_fu_1150_p2 <= "1" when (unsigned(tmp_30_fu_1140_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_28_fu_1179_p2 <= "1" when (unsigned(tmp_31_fu_1169_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_29_fu_1208_p2 <= "1" when (unsigned(tmp_32_fu_1198_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_2_fu_425_p2 <= "1" when (unsigned(tmp_5_fu_415_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_30_fu_1237_p2 <= "1" when (unsigned(tmp_33_fu_1227_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_31_fu_1266_p2 <= "1" when (unsigned(tmp_34_fu_1256_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_3_fu_454_p2 <= "1" when (unsigned(tmp_6_fu_444_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_4_fu_483_p2 <= "1" when (unsigned(tmp_7_fu_473_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_5_fu_512_p2 <= "1" when (unsigned(tmp_8_fu_502_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_6_fu_541_p2 <= "1" when (unsigned(tmp_9_fu_531_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_7_fu_570_p2 <= "1" when (unsigned(tmp_10_fu_560_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_8_fu_599_p2 <= "1" when (unsigned(tmp_11_fu_589_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_9_fu_628_p2 <= "1" when (unsigned(tmp_12_fu_618_p4) < unsigned(threshold_value)) else "0";
    icmp_ln1031_fu_367_p2 <= "1" when (unsigned(trunc_ln628_1_fu_363_p1) < unsigned(threshold_value)) else "0";
    p_Result_s_fu_1277_p33 <= (((((((((((((((((((((((((((((((xor_ln1031_31_fu_1271_p2 & select_ln345_30_fu_1248_p3) & select_ln345_29_fu_1219_p3) & select_ln345_28_fu_1190_p3) & select_ln345_27_fu_1161_p3) & select_ln345_26_fu_1132_p3) & select_ln345_25_fu_1103_p3) & select_ln345_24_fu_1074_p3) & select_ln345_23_fu_1045_p3) & select_ln345_22_fu_1016_p3) & select_ln345_21_fu_987_p3) & select_ln345_20_fu_958_p3) & select_ln345_19_fu_929_p3) & select_ln345_18_fu_900_p3) & select_ln345_17_fu_871_p3) & select_ln345_16_fu_842_p3) & select_ln345_15_fu_813_p3) & select_ln345_14_fu_784_p3) & select_ln345_13_fu_755_p3) & select_ln345_12_fu_726_p3) & select_ln345_11_fu_697_p3) & select_ln345_10_fu_668_p3) & select_ln345_9_fu_639_p3) & select_ln345_8_fu_610_p3) & select_ln345_7_fu_581_p3) & select_ln345_6_fu_552_p3) & select_ln345_5_fu_523_p3) & select_ln345_4_fu_494_p3) & select_ln345_3_fu_465_p3) & select_ln345_2_fu_436_p3) & select_ln345_1_fu_407_p3) & select_ln345_fu_378_p3);
    select_ln345_10_fu_668_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_10_fu_662_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_11_fu_697_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_11_fu_691_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_12_fu_726_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_12_fu_720_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_13_fu_755_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_13_fu_749_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_14_fu_784_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_14_fu_778_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_15_fu_813_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_15_fu_807_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_16_fu_842_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_16_fu_836_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_17_fu_871_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_17_fu_865_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_18_fu_900_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_18_fu_894_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_19_fu_929_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_19_fu_923_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_1_fu_407_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_1_fu_401_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_20_fu_958_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_20_fu_952_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_21_fu_987_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_21_fu_981_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_22_fu_1016_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_22_fu_1010_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_23_fu_1045_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_23_fu_1039_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_24_fu_1074_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_24_fu_1068_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_25_fu_1103_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_25_fu_1097_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_26_fu_1132_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_26_fu_1126_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_27_fu_1161_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_27_fu_1155_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_28_fu_1190_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_28_fu_1184_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_29_fu_1219_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_29_fu_1213_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_2_fu_436_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_2_fu_430_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_30_fu_1248_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_30_fu_1242_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_3_fu_465_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_3_fu_459_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_4_fu_494_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_4_fu_488_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_5_fu_523_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_5_fu_517_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_6_fu_552_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_6_fu_546_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_7_fu_581_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_7_fu_575_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_8_fu_610_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_8_fu_604_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_9_fu_639_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_9_fu_633_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln345_fu_378_p3 <= 
        ap_const_lv8_FF when (xor_ln1031_fu_372_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln345_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_s_fu_1277_p33),256));

    shl_ln_fu_313_p3 <= (output_buf_User_V_1_fu_196 & ap_const_lv256_lc_1);
    tmp_10_fu_560_p4 <= DataBuf_Data_V(63 downto 56);
    tmp_11_fu_589_p4 <= DataBuf_Data_V(71 downto 64);
    tmp_12_fu_618_p4 <= DataBuf_Data_V(79 downto 72);
    tmp_13_fu_647_p4 <= DataBuf_Data_V(87 downto 80);
    tmp_14_fu_676_p4 <= DataBuf_Data_V(95 downto 88);
    tmp_15_fu_705_p4 <= DataBuf_Data_V(103 downto 96);
    tmp_16_fu_734_p4 <= DataBuf_Data_V(111 downto 104);
    tmp_17_fu_763_p4 <= DataBuf_Data_V(119 downto 112);
    tmp_18_fu_792_p4 <= DataBuf_Data_V(127 downto 120);
    tmp_19_fu_821_p4 <= DataBuf_Data_V(135 downto 128);
    tmp_1_fu_305_p3 <= output_buf_User_V_1_fu_196(2 downto 2);
    tmp_20_fu_850_p4 <= DataBuf_Data_V(143 downto 136);
    tmp_21_fu_879_p4 <= DataBuf_Data_V(151 downto 144);
    tmp_22_fu_908_p4 <= DataBuf_Data_V(159 downto 152);
    tmp_23_fu_937_p4 <= DataBuf_Data_V(167 downto 160);
    tmp_24_fu_966_p4 <= DataBuf_Data_V(175 downto 168);
    tmp_25_fu_995_p4 <= DataBuf_Data_V(183 downto 176);
    tmp_26_fu_1024_p4 <= DataBuf_Data_V(191 downto 184);
    tmp_27_fu_1053_p4 <= DataBuf_Data_V(199 downto 192);
    tmp_28_fu_1082_p4 <= DataBuf_Data_V(207 downto 200);
    tmp_29_fu_1111_p4 <= DataBuf_Data_V(215 downto 208);
    tmp_2_fu_330_p3 <= p_Val2_s_reg_219(1 downto 1);
    tmp_30_fu_1140_p4 <= DataBuf_Data_V(223 downto 216);
    tmp_31_fu_1169_p4 <= DataBuf_Data_V(231 downto 224);
    tmp_32_fu_1198_p4 <= DataBuf_Data_V(239 downto 232);
    tmp_33_fu_1227_p4 <= DataBuf_Data_V(247 downto 240);
    tmp_34_fu_1256_p4 <= DataBuf_Data_V(255 downto 248);
    tmp_35_fu_1349_p3 <= (output_buf_User_V_reg_243 & sext_ln345_fu_1345_p1);
    tmp_36_fu_1362_p3 <= output_buf_User_V_reg_243(2 downto 2);
    tmp_3_fu_350_p3 <= (p_Val2_s_reg_219 & DataBuf_Data_V);
    tmp_4_fu_386_p4 <= DataBuf_Data_V(15 downto 8);
    tmp_5_fu_415_p4 <= DataBuf_Data_V(23 downto 16);
    tmp_6_fu_444_p4 <= DataBuf_Data_V(31 downto 24);
    tmp_7_fu_473_p4 <= DataBuf_Data_V(39 downto 32);
    tmp_8_fu_502_p4 <= DataBuf_Data_V(47 downto 40);
    tmp_9_fu_531_p4 <= DataBuf_Data_V(55 downto 48);
    tmp_fu_287_p3 <= output_buf_User_V_1_fu_196(3 downto 3);
    trunc_ln26_fu_295_p1 <= VideoIn_TDATA(256 - 1 downto 0);
    trunc_ln628_1_fu_363_p1 <= DataBuf_Data_V(8 - 1 downto 0);
    trunc_ln628_fu_326_p1 <= p_Val2_s_reg_219(1 - 1 downto 0);
    trunc_ln66_fu_1370_p1 <= VideoIn_TDATA(256 - 1 downto 0);
    xor_ln1019_fu_338_p2 <= (tmp_2_fu_330_p3 xor ap_const_lv1_1);
    xor_ln1031_10_fu_662_p2 <= (icmp_ln1031_10_fu_657_p2 xor ap_const_lv1_1);
    xor_ln1031_11_fu_691_p2 <= (icmp_ln1031_11_fu_686_p2 xor ap_const_lv1_1);
    xor_ln1031_12_fu_720_p2 <= (icmp_ln1031_12_fu_715_p2 xor ap_const_lv1_1);
    xor_ln1031_13_fu_749_p2 <= (icmp_ln1031_13_fu_744_p2 xor ap_const_lv1_1);
    xor_ln1031_14_fu_778_p2 <= (icmp_ln1031_14_fu_773_p2 xor ap_const_lv1_1);
    xor_ln1031_15_fu_807_p2 <= (icmp_ln1031_15_fu_802_p2 xor ap_const_lv1_1);
    xor_ln1031_16_fu_836_p2 <= (icmp_ln1031_16_fu_831_p2 xor ap_const_lv1_1);
    xor_ln1031_17_fu_865_p2 <= (icmp_ln1031_17_fu_860_p2 xor ap_const_lv1_1);
    xor_ln1031_18_fu_894_p2 <= (icmp_ln1031_18_fu_889_p2 xor ap_const_lv1_1);
    xor_ln1031_19_fu_923_p2 <= (icmp_ln1031_19_fu_918_p2 xor ap_const_lv1_1);
    xor_ln1031_1_fu_401_p2 <= (icmp_ln1031_1_fu_396_p2 xor ap_const_lv1_1);
    xor_ln1031_20_fu_952_p2 <= (icmp_ln1031_20_fu_947_p2 xor ap_const_lv1_1);
    xor_ln1031_21_fu_981_p2 <= (icmp_ln1031_21_fu_976_p2 xor ap_const_lv1_1);
    xor_ln1031_22_fu_1010_p2 <= (icmp_ln1031_22_fu_1005_p2 xor ap_const_lv1_1);
    xor_ln1031_23_fu_1039_p2 <= (icmp_ln1031_23_fu_1034_p2 xor ap_const_lv1_1);
    xor_ln1031_24_fu_1068_p2 <= (icmp_ln1031_24_fu_1063_p2 xor ap_const_lv1_1);
    xor_ln1031_25_fu_1097_p2 <= (icmp_ln1031_25_fu_1092_p2 xor ap_const_lv1_1);
    xor_ln1031_26_fu_1126_p2 <= (icmp_ln1031_26_fu_1121_p2 xor ap_const_lv1_1);
    xor_ln1031_27_fu_1155_p2 <= (icmp_ln1031_27_fu_1150_p2 xor ap_const_lv1_1);
    xor_ln1031_28_fu_1184_p2 <= (icmp_ln1031_28_fu_1179_p2 xor ap_const_lv1_1);
    xor_ln1031_29_fu_1213_p2 <= (icmp_ln1031_29_fu_1208_p2 xor ap_const_lv1_1);
    xor_ln1031_2_fu_430_p2 <= (icmp_ln1031_2_fu_425_p2 xor ap_const_lv1_1);
    xor_ln1031_30_fu_1242_p2 <= (icmp_ln1031_30_fu_1237_p2 xor ap_const_lv1_1);
    xor_ln1031_31_fu_1271_p2 <= (icmp_ln1031_31_fu_1266_p2 xor ap_const_lv1_1);
    xor_ln1031_3_fu_459_p2 <= (icmp_ln1031_3_fu_454_p2 xor ap_const_lv1_1);
    xor_ln1031_4_fu_488_p2 <= (icmp_ln1031_4_fu_483_p2 xor ap_const_lv1_1);
    xor_ln1031_5_fu_517_p2 <= (icmp_ln1031_5_fu_512_p2 xor ap_const_lv1_1);
    xor_ln1031_6_fu_546_p2 <= (icmp_ln1031_6_fu_541_p2 xor ap_const_lv1_1);
    xor_ln1031_7_fu_575_p2 <= (icmp_ln1031_7_fu_570_p2 xor ap_const_lv1_1);
    xor_ln1031_8_fu_604_p2 <= (icmp_ln1031_8_fu_599_p2 xor ap_const_lv1_1);
    xor_ln1031_9_fu_633_p2 <= (icmp_ln1031_9_fu_628_p2 xor ap_const_lv1_1);
    xor_ln1031_fu_372_p2 <= (icmp_ln1031_fu_367_p2 xor ap_const_lv1_1);
    zext_ln38_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_313_p3),512));
    zext_ln44_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_350_p3),512));
    zext_ln60_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1349_p3),512));
end behav;
