-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_array_ap_ufixed_52u_array_ap_fixed_8_2_5_3_0_5u_config17_s_w17_V_ROM_AUbhl is 
    generic(
             DataWidth     : integer := 7; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 260
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);
 
          address1        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce1             : in std_logic; 
          q1              : out std_logic_vector(DataWidth-1 downto 0);
 
          address2        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce2             : in std_logic; 
          q2              : out std_logic_vector(DataWidth-1 downto 0);
 
          address3        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce3             : in std_logic; 
          q3              : out std_logic_vector(DataWidth-1 downto 0);
 
          address4        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce4             : in std_logic; 
          q4              : out std_logic_vector(DataWidth-1 downto 0);
 
          address5        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce5             : in std_logic; 
          q5              : out std_logic_vector(DataWidth-1 downto 0);
 
          address6        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce6             : in std_logic; 
          q6              : out std_logic_vector(DataWidth-1 downto 0);
 
          address7        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce7             : in std_logic; 
          q7              : out std_logic_vector(DataWidth-1 downto 0);
 
          address8        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce8             : in std_logic; 
          q8              : out std_logic_vector(DataWidth-1 downto 0);
 
          address9        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce9             : in std_logic; 
          q9              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_array_ap_ufixed_52u_array_ap_fixed_8_2_5_3_0_5u_config17_s_w17_V_ROM_AUbhl is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address1_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address2_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address3_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address4_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address5_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address6_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address7_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address8_tmp : std_logic_vector(AddressWidth-1 downto 0);  
signal address9_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "1111000", 1 => "0001001", 2 => "0000000", 3 => "1111001", 
    4 => "1111110", 5 => "0000100", 6 => "0000101", 7 => "1111011", 
    8 => "0001101", 9 => "0000110", 10 => "0000000", 11 => "0001000", 
    12 => "0000000", 13 => "0000100", 14 => "1110110", 15 => "1111101", 
    16 => "1111000", 17 => "1111001", 18 => "1111101", 19 => "0000010", 
    20 => "1111100", 21 => "0001011", 22 => "1111010", 23 => "1111010", 
    24 => "1111111", 25 => "0000000", 26 => "1111011", 27 => "0001000", 
    28 => "1111000", 29 => "0000111", 30 => "1111000", 31 => "1111001", 
    32 => "0000000", 33 => "1110111", 34 => "0000000", 35 => "0001001", 
    36 => "1111101", 37 => "0000000", 38 => "0001010", 39 => "0000111", 
    40 => "0000110", 41 => "0000000", 42 => "0000000", 43 => "0000111", 
    44 => "1110111", 45 => "1111101", 46 => "0000010", 47 => "1110010", 
    48 => "1110010", 49 => "1111001", 50 => "0000110", 51 => "1110110", 
    52 => "1110101", 53 => "1111000", 54 => "1110100", 55 => "0000011", 
    56 => "0010001", 57 => "0000110", 58 => "1110010", 59 => "0010011", 
    60 => "1111101", 61 => "1110101", 62 => "1110001", 63 => "1110011", 
    64 => "0000100", 65 => "1111111", 66 => "0001011", 67 => "1111100", 
    68 => "1110000", 69 => "1101011", 70 => "0000010", 71 => "0000010", 
    72 => "0001011", 73 => "1110100", 74 => "0000001", 75 => "0000111", 
    76 => "0001100", 77 => "1111100", 78 => "0000011", 79 => "0001000", 
    80 => "0001111", 81 => "0000010", 82 => "0000000", 83 => "1111101", 
    84 => "0001101", 85 => "1110101", 86 => "0001101", 87 => "0001101", 
    88 => "1111010", 89 => "1111001", 90 => "1101000", 91 => "0000111", 
    92 => "0000110", 93 => "1110111", 94 => "0000010", 95 => "0001010", 
    96 => "0000010", 97 => "1110010", 98 => "0001100", 99 => "1101000", 
    100 => "0000000", 101 => "1111010", 102 => "0000011", 103 => "1110000", 
    104 => "1110110", 105 => "1111111", 106 => "0000100", 107 => "0001000", 
    108 => "1111111", 109 => "0000111", 110 => "1111001", 111 => "0000000", 
    112 => "1110011", 113 => "1111111", 114 => "0001100", 115 => "1110101", 
    116 => "1111111", 117 => "0000011", 118 => "1110010", 119 => "0001000", 
    120 => "1111110", 121 => "1111000", 122 => "0001001", 123 => "0000101", 
    124 => "1111010", 125 => "1111010", 126 => "0000100", 127 => "1110010", 
    128 => "1111101", 129 => "1110111", 130 => "1111101", 131 => "1110100", 
    132 => "1111101", 133 => "1111100", 134 => "1111000", 135 => "1111111", 
    136 => "0000000", 137 => "0000111", 138 => "1110110", 139 => "1111100", 
    140 => "0000100", 141 => "1111000", 142 => "1111100", 143 => "0000001", 
    144 => "0000111", 145 => "0000001", 146 => "1111000", 147 => "1111011", 
    148 => "0000100", 149 => "0000001", 150 => "0000111", 151 => "0000011", 
    152 => "0000101", 153 => "0001001", 154 => "0001010", 155 => "1110111", 
    156 => "1110011", 157 => "1111000", 158 => "1110110", 159 => "1111100", 
    160 => "0000100", 161 => "1111110", 162 => "1111111", 163 => "0001110", 
    164 => "1111001", 165 => "1111101", 166 => "0000100", 167 => "1111100", 
    168 => "0000101", 169 => "0000010", 170 => "1111111", 171 => "0000011", 
    172 => "0010000", 173 => "1111101", 174 => "0001001", 175 => "0000110", 
    176 => "1111001", 177 => "1110011", 178 => "1111100", 179 => "0000001", 
    180 => "0000100", 181 => "1111110", 182 => "1111011", 183 => "1110111", 
    184 => "1111010", 185 => "0000101", 186 => "1111010", 187 => "1111011", 
    188 => "1111000", 189 => "1111110", 190 => "0001001", 191 => "1111011", 
    192 => "0000110", 193 => "0000101", 194 => "0000111", 195 => "0000010", 
    196 => "0000001", 197 => "1111000", 198 => "0000110", 199 => "1110011", 
    200 => "1110011", 201 => "0000001", 202 => "1111111", 203 => "1110011", 
    204 => "0000000", 205 => "0001010", 206 => "0000000", 207 => "0001011", 
    208 => "1111000", 209 => "1111000", 210 => "1100110", 211 => "0000001", 
    212 => "1101010", 213 => "1001000", 214 => "1100111", 215 => "1110110", 
    216 => "1111110", 217 => "1110000", 218 => "1111010", 219 => "1111111", 
    220 => "0000011", 221 => "1110011", 222 => "1101011", 223 => "1111111", 
    224 => "1111110", 225 => "1111001", 226 => "1111001", 227 => "1111110", 
    228 => "1101111", 229 => "1110000", 230 => "1110101", 231 => "1111110", 
    232 => "1111011", 233 => "1111101", 234 => "1110001", 235 => "0000111", 
    236 => "1101001", 237 => "0000010", 238 => "0000101", 239 => "1110101", 
    240 => "1111000", 241 => "1101010", 242 => "1111111", 243 => "1101010", 
    244 => "0001011", 245 => "0000101", 246 => "1111101", 247 => "0011110", 
    248 => "1110101", 249 => "1110111", 250 => "0000001", 251 => "1111000", 
    252 => "0001010", 253 => "1100110", 254 => "0001110", 255 => "1100110", 
    256 => "0000011", 257 => "1111010", 258 => "1101110", 259 => "1110101");

signal mem1 : mem_array := (
    0 => "1111000", 1 => "0001001", 2 => "0000000", 3 => "1111001", 
    4 => "1111110", 5 => "0000100", 6 => "0000101", 7 => "1111011", 
    8 => "0001101", 9 => "0000110", 10 => "0000000", 11 => "0001000", 
    12 => "0000000", 13 => "0000100", 14 => "1110110", 15 => "1111101", 
    16 => "1111000", 17 => "1111001", 18 => "1111101", 19 => "0000010", 
    20 => "1111100", 21 => "0001011", 22 => "1111010", 23 => "1111010", 
    24 => "1111111", 25 => "0000000", 26 => "1111011", 27 => "0001000", 
    28 => "1111000", 29 => "0000111", 30 => "1111000", 31 => "1111001", 
    32 => "0000000", 33 => "1110111", 34 => "0000000", 35 => "0001001", 
    36 => "1111101", 37 => "0000000", 38 => "0001010", 39 => "0000111", 
    40 => "0000110", 41 => "0000000", 42 => "0000000", 43 => "0000111", 
    44 => "1110111", 45 => "1111101", 46 => "0000010", 47 => "1110010", 
    48 => "1110010", 49 => "1111001", 50 => "0000110", 51 => "1110110", 
    52 => "1110101", 53 => "1111000", 54 => "1110100", 55 => "0000011", 
    56 => "0010001", 57 => "0000110", 58 => "1110010", 59 => "0010011", 
    60 => "1111101", 61 => "1110101", 62 => "1110001", 63 => "1110011", 
    64 => "0000100", 65 => "1111111", 66 => "0001011", 67 => "1111100", 
    68 => "1110000", 69 => "1101011", 70 => "0000010", 71 => "0000010", 
    72 => "0001011", 73 => "1110100", 74 => "0000001", 75 => "0000111", 
    76 => "0001100", 77 => "1111100", 78 => "0000011", 79 => "0001000", 
    80 => "0001111", 81 => "0000010", 82 => "0000000", 83 => "1111101", 
    84 => "0001101", 85 => "1110101", 86 => "0001101", 87 => "0001101", 
    88 => "1111010", 89 => "1111001", 90 => "1101000", 91 => "0000111", 
    92 => "0000110", 93 => "1110111", 94 => "0000010", 95 => "0001010", 
    96 => "0000010", 97 => "1110010", 98 => "0001100", 99 => "1101000", 
    100 => "0000000", 101 => "1111010", 102 => "0000011", 103 => "1110000", 
    104 => "1110110", 105 => "1111111", 106 => "0000100", 107 => "0001000", 
    108 => "1111111", 109 => "0000111", 110 => "1111001", 111 => "0000000", 
    112 => "1110011", 113 => "1111111", 114 => "0001100", 115 => "1110101", 
    116 => "1111111", 117 => "0000011", 118 => "1110010", 119 => "0001000", 
    120 => "1111110", 121 => "1111000", 122 => "0001001", 123 => "0000101", 
    124 => "1111010", 125 => "1111010", 126 => "0000100", 127 => "1110010", 
    128 => "1111101", 129 => "1110111", 130 => "1111101", 131 => "1110100", 
    132 => "1111101", 133 => "1111100", 134 => "1111000", 135 => "1111111", 
    136 => "0000000", 137 => "0000111", 138 => "1110110", 139 => "1111100", 
    140 => "0000100", 141 => "1111000", 142 => "1111100", 143 => "0000001", 
    144 => "0000111", 145 => "0000001", 146 => "1111000", 147 => "1111011", 
    148 => "0000100", 149 => "0000001", 150 => "0000111", 151 => "0000011", 
    152 => "0000101", 153 => "0001001", 154 => "0001010", 155 => "1110111", 
    156 => "1110011", 157 => "1111000", 158 => "1110110", 159 => "1111100", 
    160 => "0000100", 161 => "1111110", 162 => "1111111", 163 => "0001110", 
    164 => "1111001", 165 => "1111101", 166 => "0000100", 167 => "1111100", 
    168 => "0000101", 169 => "0000010", 170 => "1111111", 171 => "0000011", 
    172 => "0010000", 173 => "1111101", 174 => "0001001", 175 => "0000110", 
    176 => "1111001", 177 => "1110011", 178 => "1111100", 179 => "0000001", 
    180 => "0000100", 181 => "1111110", 182 => "1111011", 183 => "1110111", 
    184 => "1111010", 185 => "0000101", 186 => "1111010", 187 => "1111011", 
    188 => "1111000", 189 => "1111110", 190 => "0001001", 191 => "1111011", 
    192 => "0000110", 193 => "0000101", 194 => "0000111", 195 => "0000010", 
    196 => "0000001", 197 => "1111000", 198 => "0000110", 199 => "1110011", 
    200 => "1110011", 201 => "0000001", 202 => "1111111", 203 => "1110011", 
    204 => "0000000", 205 => "0001010", 206 => "0000000", 207 => "0001011", 
    208 => "1111000", 209 => "1111000", 210 => "1100110", 211 => "0000001", 
    212 => "1101010", 213 => "1001000", 214 => "1100111", 215 => "1110110", 
    216 => "1111110", 217 => "1110000", 218 => "1111010", 219 => "1111111", 
    220 => "0000011", 221 => "1110011", 222 => "1101011", 223 => "1111111", 
    224 => "1111110", 225 => "1111001", 226 => "1111001", 227 => "1111110", 
    228 => "1101111", 229 => "1110000", 230 => "1110101", 231 => "1111110", 
    232 => "1111011", 233 => "1111101", 234 => "1110001", 235 => "0000111", 
    236 => "1101001", 237 => "0000010", 238 => "0000101", 239 => "1110101", 
    240 => "1111000", 241 => "1101010", 242 => "1111111", 243 => "1101010", 
    244 => "0001011", 245 => "0000101", 246 => "1111101", 247 => "0011110", 
    248 => "1110101", 249 => "1110111", 250 => "0000001", 251 => "1111000", 
    252 => "0001010", 253 => "1100110", 254 => "0001110", 255 => "1100110", 
    256 => "0000011", 257 => "1111010", 258 => "1101110", 259 => "1110101");

signal mem2 : mem_array := (
    0 => "1111000", 1 => "0001001", 2 => "0000000", 3 => "1111001", 
    4 => "1111110", 5 => "0000100", 6 => "0000101", 7 => "1111011", 
    8 => "0001101", 9 => "0000110", 10 => "0000000", 11 => "0001000", 
    12 => "0000000", 13 => "0000100", 14 => "1110110", 15 => "1111101", 
    16 => "1111000", 17 => "1111001", 18 => "1111101", 19 => "0000010", 
    20 => "1111100", 21 => "0001011", 22 => "1111010", 23 => "1111010", 
    24 => "1111111", 25 => "0000000", 26 => "1111011", 27 => "0001000", 
    28 => "1111000", 29 => "0000111", 30 => "1111000", 31 => "1111001", 
    32 => "0000000", 33 => "1110111", 34 => "0000000", 35 => "0001001", 
    36 => "1111101", 37 => "0000000", 38 => "0001010", 39 => "0000111", 
    40 => "0000110", 41 => "0000000", 42 => "0000000", 43 => "0000111", 
    44 => "1110111", 45 => "1111101", 46 => "0000010", 47 => "1110010", 
    48 => "1110010", 49 => "1111001", 50 => "0000110", 51 => "1110110", 
    52 => "1110101", 53 => "1111000", 54 => "1110100", 55 => "0000011", 
    56 => "0010001", 57 => "0000110", 58 => "1110010", 59 => "0010011", 
    60 => "1111101", 61 => "1110101", 62 => "1110001", 63 => "1110011", 
    64 => "0000100", 65 => "1111111", 66 => "0001011", 67 => "1111100", 
    68 => "1110000", 69 => "1101011", 70 => "0000010", 71 => "0000010", 
    72 => "0001011", 73 => "1110100", 74 => "0000001", 75 => "0000111", 
    76 => "0001100", 77 => "1111100", 78 => "0000011", 79 => "0001000", 
    80 => "0001111", 81 => "0000010", 82 => "0000000", 83 => "1111101", 
    84 => "0001101", 85 => "1110101", 86 => "0001101", 87 => "0001101", 
    88 => "1111010", 89 => "1111001", 90 => "1101000", 91 => "0000111", 
    92 => "0000110", 93 => "1110111", 94 => "0000010", 95 => "0001010", 
    96 => "0000010", 97 => "1110010", 98 => "0001100", 99 => "1101000", 
    100 => "0000000", 101 => "1111010", 102 => "0000011", 103 => "1110000", 
    104 => "1110110", 105 => "1111111", 106 => "0000100", 107 => "0001000", 
    108 => "1111111", 109 => "0000111", 110 => "1111001", 111 => "0000000", 
    112 => "1110011", 113 => "1111111", 114 => "0001100", 115 => "1110101", 
    116 => "1111111", 117 => "0000011", 118 => "1110010", 119 => "0001000", 
    120 => "1111110", 121 => "1111000", 122 => "0001001", 123 => "0000101", 
    124 => "1111010", 125 => "1111010", 126 => "0000100", 127 => "1110010", 
    128 => "1111101", 129 => "1110111", 130 => "1111101", 131 => "1110100", 
    132 => "1111101", 133 => "1111100", 134 => "1111000", 135 => "1111111", 
    136 => "0000000", 137 => "0000111", 138 => "1110110", 139 => "1111100", 
    140 => "0000100", 141 => "1111000", 142 => "1111100", 143 => "0000001", 
    144 => "0000111", 145 => "0000001", 146 => "1111000", 147 => "1111011", 
    148 => "0000100", 149 => "0000001", 150 => "0000111", 151 => "0000011", 
    152 => "0000101", 153 => "0001001", 154 => "0001010", 155 => "1110111", 
    156 => "1110011", 157 => "1111000", 158 => "1110110", 159 => "1111100", 
    160 => "0000100", 161 => "1111110", 162 => "1111111", 163 => "0001110", 
    164 => "1111001", 165 => "1111101", 166 => "0000100", 167 => "1111100", 
    168 => "0000101", 169 => "0000010", 170 => "1111111", 171 => "0000011", 
    172 => "0010000", 173 => "1111101", 174 => "0001001", 175 => "0000110", 
    176 => "1111001", 177 => "1110011", 178 => "1111100", 179 => "0000001", 
    180 => "0000100", 181 => "1111110", 182 => "1111011", 183 => "1110111", 
    184 => "1111010", 185 => "0000101", 186 => "1111010", 187 => "1111011", 
    188 => "1111000", 189 => "1111110", 190 => "0001001", 191 => "1111011", 
    192 => "0000110", 193 => "0000101", 194 => "0000111", 195 => "0000010", 
    196 => "0000001", 197 => "1111000", 198 => "0000110", 199 => "1110011", 
    200 => "1110011", 201 => "0000001", 202 => "1111111", 203 => "1110011", 
    204 => "0000000", 205 => "0001010", 206 => "0000000", 207 => "0001011", 
    208 => "1111000", 209 => "1111000", 210 => "1100110", 211 => "0000001", 
    212 => "1101010", 213 => "1001000", 214 => "1100111", 215 => "1110110", 
    216 => "1111110", 217 => "1110000", 218 => "1111010", 219 => "1111111", 
    220 => "0000011", 221 => "1110011", 222 => "1101011", 223 => "1111111", 
    224 => "1111110", 225 => "1111001", 226 => "1111001", 227 => "1111110", 
    228 => "1101111", 229 => "1110000", 230 => "1110101", 231 => "1111110", 
    232 => "1111011", 233 => "1111101", 234 => "1110001", 235 => "0000111", 
    236 => "1101001", 237 => "0000010", 238 => "0000101", 239 => "1110101", 
    240 => "1111000", 241 => "1101010", 242 => "1111111", 243 => "1101010", 
    244 => "0001011", 245 => "0000101", 246 => "1111101", 247 => "0011110", 
    248 => "1110101", 249 => "1110111", 250 => "0000001", 251 => "1111000", 
    252 => "0001010", 253 => "1100110", 254 => "0001110", 255 => "1100110", 
    256 => "0000011", 257 => "1111010", 258 => "1101110", 259 => "1110101");

signal mem3 : mem_array := (
    0 => "1111000", 1 => "0001001", 2 => "0000000", 3 => "1111001", 
    4 => "1111110", 5 => "0000100", 6 => "0000101", 7 => "1111011", 
    8 => "0001101", 9 => "0000110", 10 => "0000000", 11 => "0001000", 
    12 => "0000000", 13 => "0000100", 14 => "1110110", 15 => "1111101", 
    16 => "1111000", 17 => "1111001", 18 => "1111101", 19 => "0000010", 
    20 => "1111100", 21 => "0001011", 22 => "1111010", 23 => "1111010", 
    24 => "1111111", 25 => "0000000", 26 => "1111011", 27 => "0001000", 
    28 => "1111000", 29 => "0000111", 30 => "1111000", 31 => "1111001", 
    32 => "0000000", 33 => "1110111", 34 => "0000000", 35 => "0001001", 
    36 => "1111101", 37 => "0000000", 38 => "0001010", 39 => "0000111", 
    40 => "0000110", 41 => "0000000", 42 => "0000000", 43 => "0000111", 
    44 => "1110111", 45 => "1111101", 46 => "0000010", 47 => "1110010", 
    48 => "1110010", 49 => "1111001", 50 => "0000110", 51 => "1110110", 
    52 => "1110101", 53 => "1111000", 54 => "1110100", 55 => "0000011", 
    56 => "0010001", 57 => "0000110", 58 => "1110010", 59 => "0010011", 
    60 => "1111101", 61 => "1110101", 62 => "1110001", 63 => "1110011", 
    64 => "0000100", 65 => "1111111", 66 => "0001011", 67 => "1111100", 
    68 => "1110000", 69 => "1101011", 70 => "0000010", 71 => "0000010", 
    72 => "0001011", 73 => "1110100", 74 => "0000001", 75 => "0000111", 
    76 => "0001100", 77 => "1111100", 78 => "0000011", 79 => "0001000", 
    80 => "0001111", 81 => "0000010", 82 => "0000000", 83 => "1111101", 
    84 => "0001101", 85 => "1110101", 86 => "0001101", 87 => "0001101", 
    88 => "1111010", 89 => "1111001", 90 => "1101000", 91 => "0000111", 
    92 => "0000110", 93 => "1110111", 94 => "0000010", 95 => "0001010", 
    96 => "0000010", 97 => "1110010", 98 => "0001100", 99 => "1101000", 
    100 => "0000000", 101 => "1111010", 102 => "0000011", 103 => "1110000", 
    104 => "1110110", 105 => "1111111", 106 => "0000100", 107 => "0001000", 
    108 => "1111111", 109 => "0000111", 110 => "1111001", 111 => "0000000", 
    112 => "1110011", 113 => "1111111", 114 => "0001100", 115 => "1110101", 
    116 => "1111111", 117 => "0000011", 118 => "1110010", 119 => "0001000", 
    120 => "1111110", 121 => "1111000", 122 => "0001001", 123 => "0000101", 
    124 => "1111010", 125 => "1111010", 126 => "0000100", 127 => "1110010", 
    128 => "1111101", 129 => "1110111", 130 => "1111101", 131 => "1110100", 
    132 => "1111101", 133 => "1111100", 134 => "1111000", 135 => "1111111", 
    136 => "0000000", 137 => "0000111", 138 => "1110110", 139 => "1111100", 
    140 => "0000100", 141 => "1111000", 142 => "1111100", 143 => "0000001", 
    144 => "0000111", 145 => "0000001", 146 => "1111000", 147 => "1111011", 
    148 => "0000100", 149 => "0000001", 150 => "0000111", 151 => "0000011", 
    152 => "0000101", 153 => "0001001", 154 => "0001010", 155 => "1110111", 
    156 => "1110011", 157 => "1111000", 158 => "1110110", 159 => "1111100", 
    160 => "0000100", 161 => "1111110", 162 => "1111111", 163 => "0001110", 
    164 => "1111001", 165 => "1111101", 166 => "0000100", 167 => "1111100", 
    168 => "0000101", 169 => "0000010", 170 => "1111111", 171 => "0000011", 
    172 => "0010000", 173 => "1111101", 174 => "0001001", 175 => "0000110", 
    176 => "1111001", 177 => "1110011", 178 => "1111100", 179 => "0000001", 
    180 => "0000100", 181 => "1111110", 182 => "1111011", 183 => "1110111", 
    184 => "1111010", 185 => "0000101", 186 => "1111010", 187 => "1111011", 
    188 => "1111000", 189 => "1111110", 190 => "0001001", 191 => "1111011", 
    192 => "0000110", 193 => "0000101", 194 => "0000111", 195 => "0000010", 
    196 => "0000001", 197 => "1111000", 198 => "0000110", 199 => "1110011", 
    200 => "1110011", 201 => "0000001", 202 => "1111111", 203 => "1110011", 
    204 => "0000000", 205 => "0001010", 206 => "0000000", 207 => "0001011", 
    208 => "1111000", 209 => "1111000", 210 => "1100110", 211 => "0000001", 
    212 => "1101010", 213 => "1001000", 214 => "1100111", 215 => "1110110", 
    216 => "1111110", 217 => "1110000", 218 => "1111010", 219 => "1111111", 
    220 => "0000011", 221 => "1110011", 222 => "1101011", 223 => "1111111", 
    224 => "1111110", 225 => "1111001", 226 => "1111001", 227 => "1111110", 
    228 => "1101111", 229 => "1110000", 230 => "1110101", 231 => "1111110", 
    232 => "1111011", 233 => "1111101", 234 => "1110001", 235 => "0000111", 
    236 => "1101001", 237 => "0000010", 238 => "0000101", 239 => "1110101", 
    240 => "1111000", 241 => "1101010", 242 => "1111111", 243 => "1101010", 
    244 => "0001011", 245 => "0000101", 246 => "1111101", 247 => "0011110", 
    248 => "1110101", 249 => "1110111", 250 => "0000001", 251 => "1111000", 
    252 => "0001010", 253 => "1100110", 254 => "0001110", 255 => "1100110", 
    256 => "0000011", 257 => "1111010", 258 => "1101110", 259 => "1110101");

signal mem4 : mem_array := (
    0 => "1111000", 1 => "0001001", 2 => "0000000", 3 => "1111001", 
    4 => "1111110", 5 => "0000100", 6 => "0000101", 7 => "1111011", 
    8 => "0001101", 9 => "0000110", 10 => "0000000", 11 => "0001000", 
    12 => "0000000", 13 => "0000100", 14 => "1110110", 15 => "1111101", 
    16 => "1111000", 17 => "1111001", 18 => "1111101", 19 => "0000010", 
    20 => "1111100", 21 => "0001011", 22 => "1111010", 23 => "1111010", 
    24 => "1111111", 25 => "0000000", 26 => "1111011", 27 => "0001000", 
    28 => "1111000", 29 => "0000111", 30 => "1111000", 31 => "1111001", 
    32 => "0000000", 33 => "1110111", 34 => "0000000", 35 => "0001001", 
    36 => "1111101", 37 => "0000000", 38 => "0001010", 39 => "0000111", 
    40 => "0000110", 41 => "0000000", 42 => "0000000", 43 => "0000111", 
    44 => "1110111", 45 => "1111101", 46 => "0000010", 47 => "1110010", 
    48 => "1110010", 49 => "1111001", 50 => "0000110", 51 => "1110110", 
    52 => "1110101", 53 => "1111000", 54 => "1110100", 55 => "0000011", 
    56 => "0010001", 57 => "0000110", 58 => "1110010", 59 => "0010011", 
    60 => "1111101", 61 => "1110101", 62 => "1110001", 63 => "1110011", 
    64 => "0000100", 65 => "1111111", 66 => "0001011", 67 => "1111100", 
    68 => "1110000", 69 => "1101011", 70 => "0000010", 71 => "0000010", 
    72 => "0001011", 73 => "1110100", 74 => "0000001", 75 => "0000111", 
    76 => "0001100", 77 => "1111100", 78 => "0000011", 79 => "0001000", 
    80 => "0001111", 81 => "0000010", 82 => "0000000", 83 => "1111101", 
    84 => "0001101", 85 => "1110101", 86 => "0001101", 87 => "0001101", 
    88 => "1111010", 89 => "1111001", 90 => "1101000", 91 => "0000111", 
    92 => "0000110", 93 => "1110111", 94 => "0000010", 95 => "0001010", 
    96 => "0000010", 97 => "1110010", 98 => "0001100", 99 => "1101000", 
    100 => "0000000", 101 => "1111010", 102 => "0000011", 103 => "1110000", 
    104 => "1110110", 105 => "1111111", 106 => "0000100", 107 => "0001000", 
    108 => "1111111", 109 => "0000111", 110 => "1111001", 111 => "0000000", 
    112 => "1110011", 113 => "1111111", 114 => "0001100", 115 => "1110101", 
    116 => "1111111", 117 => "0000011", 118 => "1110010", 119 => "0001000", 
    120 => "1111110", 121 => "1111000", 122 => "0001001", 123 => "0000101", 
    124 => "1111010", 125 => "1111010", 126 => "0000100", 127 => "1110010", 
    128 => "1111101", 129 => "1110111", 130 => "1111101", 131 => "1110100", 
    132 => "1111101", 133 => "1111100", 134 => "1111000", 135 => "1111111", 
    136 => "0000000", 137 => "0000111", 138 => "1110110", 139 => "1111100", 
    140 => "0000100", 141 => "1111000", 142 => "1111100", 143 => "0000001", 
    144 => "0000111", 145 => "0000001", 146 => "1111000", 147 => "1111011", 
    148 => "0000100", 149 => "0000001", 150 => "0000111", 151 => "0000011", 
    152 => "0000101", 153 => "0001001", 154 => "0001010", 155 => "1110111", 
    156 => "1110011", 157 => "1111000", 158 => "1110110", 159 => "1111100", 
    160 => "0000100", 161 => "1111110", 162 => "1111111", 163 => "0001110", 
    164 => "1111001", 165 => "1111101", 166 => "0000100", 167 => "1111100", 
    168 => "0000101", 169 => "0000010", 170 => "1111111", 171 => "0000011", 
    172 => "0010000", 173 => "1111101", 174 => "0001001", 175 => "0000110", 
    176 => "1111001", 177 => "1110011", 178 => "1111100", 179 => "0000001", 
    180 => "0000100", 181 => "1111110", 182 => "1111011", 183 => "1110111", 
    184 => "1111010", 185 => "0000101", 186 => "1111010", 187 => "1111011", 
    188 => "1111000", 189 => "1111110", 190 => "0001001", 191 => "1111011", 
    192 => "0000110", 193 => "0000101", 194 => "0000111", 195 => "0000010", 
    196 => "0000001", 197 => "1111000", 198 => "0000110", 199 => "1110011", 
    200 => "1110011", 201 => "0000001", 202 => "1111111", 203 => "1110011", 
    204 => "0000000", 205 => "0001010", 206 => "0000000", 207 => "0001011", 
    208 => "1111000", 209 => "1111000", 210 => "1100110", 211 => "0000001", 
    212 => "1101010", 213 => "1001000", 214 => "1100111", 215 => "1110110", 
    216 => "1111110", 217 => "1110000", 218 => "1111010", 219 => "1111111", 
    220 => "0000011", 221 => "1110011", 222 => "1101011", 223 => "1111111", 
    224 => "1111110", 225 => "1111001", 226 => "1111001", 227 => "1111110", 
    228 => "1101111", 229 => "1110000", 230 => "1110101", 231 => "1111110", 
    232 => "1111011", 233 => "1111101", 234 => "1110001", 235 => "0000111", 
    236 => "1101001", 237 => "0000010", 238 => "0000101", 239 => "1110101", 
    240 => "1111000", 241 => "1101010", 242 => "1111111", 243 => "1101010", 
    244 => "0001011", 245 => "0000101", 246 => "1111101", 247 => "0011110", 
    248 => "1110101", 249 => "1110111", 250 => "0000001", 251 => "1111000", 
    252 => "0001010", 253 => "1100110", 254 => "0001110", 255 => "1100110", 
    256 => "0000011", 257 => "1111010", 258 => "1101110", 259 => "1110101");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_1: process (address1) 
begin
      address1_tmp <= address1;
--synthesis translate_off
      if (CONV_INTEGER(address1) > AddressRange-1) then
           address1_tmp <= (others => '0');
      else 
           address1_tmp <= address1;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_2: process (address2) 
begin
      address2_tmp <= address2;
--synthesis translate_off
      if (CONV_INTEGER(address2) > AddressRange-1) then
           address2_tmp <= (others => '0');
      else 
           address2_tmp <= address2;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_3: process (address3) 
begin
      address3_tmp <= address3;
--synthesis translate_off
      if (CONV_INTEGER(address3) > AddressRange-1) then
           address3_tmp <= (others => '0');
      else 
           address3_tmp <= address3;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_4: process (address4) 
begin
      address4_tmp <= address4;
--synthesis translate_off
      if (CONV_INTEGER(address4) > AddressRange-1) then
           address4_tmp <= (others => '0');
      else 
           address4_tmp <= address4;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_5: process (address5) 
begin
      address5_tmp <= address5;
--synthesis translate_off
      if (CONV_INTEGER(address5) > AddressRange-1) then
           address5_tmp <= (others => '0');
      else 
           address5_tmp <= address5;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_6: process (address6) 
begin
      address6_tmp <= address6;
--synthesis translate_off
      if (CONV_INTEGER(address6) > AddressRange-1) then
           address6_tmp <= (others => '0');
      else 
           address6_tmp <= address6;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_7: process (address7) 
begin
      address7_tmp <= address7;
--synthesis translate_off
      if (CONV_INTEGER(address7) > AddressRange-1) then
           address7_tmp <= (others => '0');
      else 
           address7_tmp <= address7;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_8: process (address8) 
begin
      address8_tmp <= address8;
--synthesis translate_off
      if (CONV_INTEGER(address8) > AddressRange-1) then
           address8_tmp <= (others => '0');
      else 
           address8_tmp <= address8;
      end if;
--synthesis translate_on
end process;
 
memory_access_guard_9: process (address9) 
begin
      address9_tmp <= address9;
--synthesis translate_off
      if (CONV_INTEGER(address9) > AddressRange-1) then
           address9_tmp <= (others => '0');
      else 
           address9_tmp <= address9;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;
 
        if (ce1 = '1') then  
            q1 <= mem0(CONV_INTEGER(address1_tmp)); 
        end if;
 
        if (ce2 = '1') then  
            q2 <= mem1(CONV_INTEGER(address2_tmp)); 
        end if;
 
        if (ce3 = '1') then  
            q3 <= mem1(CONV_INTEGER(address3_tmp)); 
        end if;
 
        if (ce4 = '1') then  
            q4 <= mem2(CONV_INTEGER(address4_tmp)); 
        end if;
 
        if (ce5 = '1') then  
            q5 <= mem2(CONV_INTEGER(address5_tmp)); 
        end if;
 
        if (ce6 = '1') then  
            q6 <= mem3(CONV_INTEGER(address6_tmp)); 
        end if;
 
        if (ce7 = '1') then  
            q7 <= mem3(CONV_INTEGER(address7_tmp)); 
        end if;
 
        if (ce8 = '1') then  
            q8 <= mem4(CONV_INTEGER(address8_tmp)); 
        end if;
 
        if (ce9 = '1') then  
            q9 <= mem4(CONV_INTEGER(address9_tmp)); 
        end if;

end if;
end process;

end rtl;

