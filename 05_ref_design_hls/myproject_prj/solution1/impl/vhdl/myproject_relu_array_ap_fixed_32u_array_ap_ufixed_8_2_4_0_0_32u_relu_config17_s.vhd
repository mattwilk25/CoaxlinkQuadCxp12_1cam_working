-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_relu_array_ap_fixed_32u_array_ap_ufixed_8_2_4_0_0_32u_relu_config17_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    layer15_out_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    layer15_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_empty_n : IN STD_LOGIC;
    layer15_out_read : OUT STD_LOGIC;
    layer17_out_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    layer17_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer17_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer17_out_full_n : IN STD_LOGIC;
    layer17_out_write : OUT STD_LOGIC );
end;


architecture behav of myproject_relu_array_ap_fixed_32u_array_ap_ufixed_8_2_4_0_0_32u_relu_config17_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_9E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011110";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000110";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_CE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001110";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010110";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011110";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100110";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_EE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101110";
    constant ap_const_lv32_F6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110110";
    constant ap_const_lv32_FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal layer15_out_blk_n : STD_LOGIC;
    signal layer17_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln51_fu_861_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_reg_1468 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_20_fu_875_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_20_reg_1473 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_2_fu_889_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_2_reg_1478 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_22_fu_903_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_22_reg_1483 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_4_fu_917_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_4_reg_1488 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_24_fu_931_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_24_reg_1493 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_6_fu_945_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_6_reg_1498 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_26_fu_959_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_26_reg_1503 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_8_fu_973_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_8_reg_1508 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_32_fu_987_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_32_reg_1513 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_10_fu_1001_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_10_reg_1518 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_33_fu_1015_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_33_reg_1523 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_12_fu_1029_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_12_reg_1528 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_34_fu_1043_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_34_reg_1533 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_14_fu_1057_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_14_reg_1538 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_35_fu_1071_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_35_reg_1543 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_16_fu_1085_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_16_reg_1548 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_36_fu_1099_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_36_reg_1553 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_18_fu_1113_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_18_reg_1558 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_37_fu_1127_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_37_reg_1563 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_20_fu_1141_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_20_reg_1568 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_38_fu_1155_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_38_reg_1573 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_22_fu_1169_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_22_reg_1578 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_39_fu_1183_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_39_reg_1583 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_24_fu_1197_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_24_reg_1588 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_40_fu_1211_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_40_reg_1593 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_26_fu_1225_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_26_reg_1598 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_41_fu_1239_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_41_reg_1603 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_28_fu_1253_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_28_reg_1608 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_42_fu_1267_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_42_reg_1613 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_30_fu_1281_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln51_30_reg_1618 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_43_fu_1295_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_43_reg_1623 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal out_data_data_27_fu_227_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_fu_231_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_data_data_fu_255_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_8_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_s_fu_265_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_fu_275_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_9_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_4_fu_285_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_data_data_18_fu_295_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_10_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_2_fu_305_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_28_fu_315_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_11_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_5_fu_325_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_data_data_19_fu_335_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_12_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_3_fu_345_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_data_data_29_fu_355_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_13_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln45_6_fu_365_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal in_data_data_20_fu_375_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_14_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_4_fu_385_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_s_fu_395_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_15_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_405_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_1_fu_415_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_16_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_5_fu_425_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_2_fu_435_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_17_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_1_fu_445_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_3_fu_455_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_18_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_6_fu_465_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_4_fu_475_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_19_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_2_fu_485_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_5_fu_495_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_20_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_7_fu_505_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_6_fu_515_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_21_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_3_fu_525_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_7_fu_535_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_22_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_8_fu_545_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_8_fu_555_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_23_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_4_fu_565_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_9_fu_575_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_24_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_9_fu_585_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_22_fu_595_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_25_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_5_fu_605_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_23_fu_615_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_26_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_1_fu_625_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_10_fu_635_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_27_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_6_fu_645_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_11_fu_655_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_28_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_10_fu_665_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_12_fu_675_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_29_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_7_fu_685_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_13_fu_695_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_30_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_11_fu_705_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_14_fu_715_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_31_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_8_fu_725_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_15_fu_735_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_32_fu_1205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_12_fu_745_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_16_fu_755_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_33_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_9_fu_765_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_17_fu_775_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_34_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_13_fu_785_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_18_fu_795_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_35_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_s_fu_805_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_19_fu_815_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_36_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln44_14_fu_825_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_27_fu_235_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_37_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln810_10_fu_835_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_21_fu_245_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1649_38_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1_fu_845_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1649_15_fu_1393_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_16_fu_1390_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_14_fu_1387_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_15_fu_1384_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_13_fu_1381_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_14_fu_1378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_12_fu_1375_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_13_fu_1372_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_11_fu_1369_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_12_fu_1366_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_10_fu_1363_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_11_fu_1360_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_9_fu_1357_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_10_fu_1354_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_8_fu_1351_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_9_fu_1348_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_7_fu_1345_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_8_fu_1342_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_6_fu_1339_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_7_fu_1336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_5_fu_1333_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_6_fu_1330_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_4_fu_1327_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_5_fu_1324_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_3_fu_1321_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_4_fu_1318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_2_fu_1315_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_3_fu_1312_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_1_fu_1309_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_fu_1306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1649_fu_1303_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln57_s_fu_1396_p33 : STD_LOGIC_VECTOR (254 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((layer17_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                out_data_data_20_reg_1473 <= out_data_data_20_fu_875_p3;
                out_data_data_22_reg_1483 <= out_data_data_22_fu_903_p3;
                out_data_data_24_reg_1493 <= out_data_data_24_fu_931_p3;
                out_data_data_26_reg_1503 <= out_data_data_26_fu_959_p3;
                p_Val2_32_reg_1513 <= p_Val2_32_fu_987_p3;
                p_Val2_33_reg_1523 <= p_Val2_33_fu_1015_p3;
                p_Val2_34_reg_1533 <= p_Val2_34_fu_1043_p3;
                p_Val2_35_reg_1543 <= p_Val2_35_fu_1071_p3;
                p_Val2_36_reg_1553 <= p_Val2_36_fu_1099_p3;
                p_Val2_37_reg_1563 <= p_Val2_37_fu_1127_p3;
                p_Val2_38_reg_1573 <= p_Val2_38_fu_1155_p3;
                p_Val2_39_reg_1583 <= p_Val2_39_fu_1183_p3;
                p_Val2_40_reg_1593 <= p_Val2_40_fu_1211_p3;
                p_Val2_41_reg_1603 <= p_Val2_41_fu_1239_p3;
                p_Val2_42_reg_1613 <= p_Val2_42_fu_1267_p3;
                p_Val2_43_reg_1623 <= p_Val2_43_fu_1295_p3;
                select_ln51_10_reg_1518 <= select_ln51_10_fu_1001_p3;
                select_ln51_12_reg_1528 <= select_ln51_12_fu_1029_p3;
                select_ln51_14_reg_1538 <= select_ln51_14_fu_1057_p3;
                select_ln51_16_reg_1548 <= select_ln51_16_fu_1085_p3;
                select_ln51_18_reg_1558 <= select_ln51_18_fu_1113_p3;
                select_ln51_20_reg_1568 <= select_ln51_20_fu_1141_p3;
                select_ln51_22_reg_1578 <= select_ln51_22_fu_1169_p3;
                select_ln51_24_reg_1588 <= select_ln51_24_fu_1197_p3;
                select_ln51_26_reg_1598 <= select_ln51_26_fu_1225_p3;
                select_ln51_28_reg_1608 <= select_ln51_28_fu_1253_p3;
                select_ln51_2_reg_1478 <= select_ln51_2_fu_889_p3;
                select_ln51_30_reg_1618 <= select_ln51_30_fu_1281_p3;
                select_ln51_4_reg_1488 <= select_ln51_4_fu_917_p3;
                select_ln51_6_reg_1498 <= select_ln51_6_fu_945_p3;
                select_ln51_8_reg_1508 <= select_ln51_8_fu_973_p3;
                select_ln51_reg_1468 <= select_ln51_fu_861_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, layer15_out_empty_n, layer17_out_full_n, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (layer15_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((layer17_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, layer15_out_empty_n)
    begin
        if (((real_start = ap_const_logic_0) or (layer15_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(layer17_out_full_n)
    begin
        if ((layer17_out_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, layer15_out_empty_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (layer15_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, layer17_out_full_n, ap_CS_fsm_state2)
    begin
        if (((layer17_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    icmp_ln1649_10_fu_897_p2 <= "1" when (signed(in_data_data_18_fu_295_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_11_fu_911_p2 <= "1" when (signed(out_data_data_28_fu_315_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_12_fu_925_p2 <= "1" when (signed(in_data_data_19_fu_335_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_13_fu_939_p2 <= "1" when (signed(out_data_data_29_fu_355_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_14_fu_953_p2 <= "1" when (signed(in_data_data_20_fu_375_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_15_fu_967_p2 <= "1" when (signed(p_Val2_s_fu_395_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_16_fu_981_p2 <= "1" when (signed(p_Val2_1_fu_415_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_17_fu_995_p2 <= "1" when (signed(p_Val2_2_fu_435_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_18_fu_1009_p2 <= "1" when (signed(p_Val2_3_fu_455_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_19_fu_1023_p2 <= "1" when (signed(p_Val2_4_fu_475_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_20_fu_1037_p2 <= "1" when (signed(p_Val2_5_fu_495_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_21_fu_1051_p2 <= "1" when (signed(p_Val2_6_fu_515_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_22_fu_1065_p2 <= "1" when (signed(p_Val2_7_fu_535_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_23_fu_1079_p2 <= "1" when (signed(p_Val2_8_fu_555_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_24_fu_1093_p2 <= "1" when (signed(p_Val2_9_fu_575_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_25_fu_1107_p2 <= "1" when (signed(p_Val2_22_fu_595_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_26_fu_1121_p2 <= "1" when (signed(p_Val2_23_fu_615_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_27_fu_1135_p2 <= "1" when (signed(p_Val2_10_fu_635_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_28_fu_1149_p2 <= "1" when (signed(p_Val2_11_fu_655_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_29_fu_1163_p2 <= "1" when (signed(p_Val2_12_fu_675_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_30_fu_1177_p2 <= "1" when (signed(p_Val2_13_fu_695_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_31_fu_1191_p2 <= "1" when (signed(p_Val2_14_fu_715_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_32_fu_1205_p2 <= "1" when (signed(p_Val2_15_fu_735_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_33_fu_1219_p2 <= "1" when (signed(p_Val2_16_fu_755_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_34_fu_1233_p2 <= "1" when (signed(p_Val2_17_fu_775_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_35_fu_1247_p2 <= "1" when (signed(p_Val2_18_fu_795_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_36_fu_1261_p2 <= "1" when (signed(p_Val2_19_fu_815_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_37_fu_1275_p2 <= "1" when (signed(p_Val2_27_fu_235_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_38_fu_1289_p2 <= "1" when (signed(p_Val2_21_fu_245_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_8_fu_869_p2 <= "1" when (signed(in_data_data_fu_255_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_9_fu_883_p2 <= "1" when (signed(out_data_data_fu_275_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln1649_fu_855_p2 <= "1" when (signed(out_data_data_27_fu_227_p1) > signed(ap_const_lv8_0)) else "0";
    in_data_data_18_fu_295_p4 <= layer15_out_dout(31 downto 24);
    in_data_data_19_fu_335_p4 <= layer15_out_dout(47 downto 40);
    in_data_data_20_fu_375_p4 <= layer15_out_dout(63 downto 56);
    in_data_data_fu_255_p4 <= layer15_out_dout(15 downto 8);

    internal_ap_ready_assign_proc : process(layer17_out_full_n, ap_CS_fsm_state2)
    begin
        if (((layer17_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    layer15_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer15_out_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer15_out_blk_n <= layer15_out_empty_n;
        else 
            layer15_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer15_out_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, layer15_out_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (layer15_out_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer15_out_read <= ap_const_logic_1;
        else 
            layer15_out_read <= ap_const_logic_0;
        end if; 
    end process;


    layer17_out_blk_n_assign_proc : process(layer17_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            layer17_out_blk_n <= layer17_out_full_n;
        else 
            layer17_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer17_out_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln57_s_fu_1396_p33),256));

    layer17_out_write_assign_proc : process(layer17_out_full_n, ap_CS_fsm_state2)
    begin
        if (((layer17_out_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            layer17_out_write <= ap_const_logic_1;
        else 
            layer17_out_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln57_s_fu_1396_p33 <= (((((((((((((((((((((((((((((((p_Val2_43_reg_1623 & zext_ln1649_15_fu_1393_p1) & zext_ln51_16_fu_1390_p1) & zext_ln1649_14_fu_1387_p1) & zext_ln51_15_fu_1384_p1) & zext_ln1649_13_fu_1381_p1) & zext_ln51_14_fu_1378_p1) & zext_ln1649_12_fu_1375_p1) & zext_ln51_13_fu_1372_p1) & zext_ln1649_11_fu_1369_p1) & zext_ln51_12_fu_1366_p1) & zext_ln1649_10_fu_1363_p1) & zext_ln51_11_fu_1360_p1) & zext_ln1649_9_fu_1357_p1) & zext_ln51_10_fu_1354_p1) & zext_ln1649_8_fu_1351_p1) & zext_ln51_9_fu_1348_p1) & zext_ln1649_7_fu_1345_p1) & zext_ln51_8_fu_1342_p1) & zext_ln1649_6_fu_1339_p1) & zext_ln51_7_fu_1336_p1) & zext_ln1649_5_fu_1333_p1) & zext_ln51_6_fu_1330_p1) & zext_ln1649_4_fu_1327_p1) & zext_ln51_5_fu_1324_p1) & zext_ln1649_3_fu_1321_p1) & zext_ln51_4_fu_1318_p1) & zext_ln1649_2_fu_1315_p1) & zext_ln51_3_fu_1312_p1) & zext_ln1649_1_fu_1309_p1) & zext_ln51_fu_1306_p1) & zext_ln1649_fu_1303_p1);
    out_data_data_20_fu_875_p3 <= 
        trunc_ln44_s_fu_265_p4 when (icmp_ln1649_8_fu_869_p2(0) = '1') else 
        ap_const_lv7_0;
    out_data_data_22_fu_903_p3 <= 
        trunc_ln44_2_fu_305_p4 when (icmp_ln1649_10_fu_897_p2(0) = '1') else 
        ap_const_lv7_0;
    out_data_data_24_fu_931_p3 <= 
        trunc_ln44_3_fu_345_p4 when (icmp_ln1649_12_fu_925_p2(0) = '1') else 
        ap_const_lv7_0;
    out_data_data_26_fu_959_p3 <= 
        trunc_ln44_4_fu_385_p4 when (icmp_ln1649_14_fu_953_p2(0) = '1') else 
        ap_const_lv7_0;
    out_data_data_27_fu_227_p1 <= layer15_out_dout(8 - 1 downto 0);
    out_data_data_28_fu_315_p4 <= layer15_out_dout(39 downto 32);
    out_data_data_29_fu_355_p4 <= layer15_out_dout(55 downto 48);
    out_data_data_fu_275_p4 <= layer15_out_dout(23 downto 16);
    p_Val2_10_fu_635_p4 <= layer15_out_dout(167 downto 160);
    p_Val2_11_fu_655_p4 <= layer15_out_dout(175 downto 168);
    p_Val2_12_fu_675_p4 <= layer15_out_dout(183 downto 176);
    p_Val2_13_fu_695_p4 <= layer15_out_dout(191 downto 184);
    p_Val2_14_fu_715_p4 <= layer15_out_dout(199 downto 192);
    p_Val2_15_fu_735_p4 <= layer15_out_dout(207 downto 200);
    p_Val2_16_fu_755_p4 <= layer15_out_dout(215 downto 208);
    p_Val2_17_fu_775_p4 <= layer15_out_dout(223 downto 216);
    p_Val2_18_fu_795_p4 <= layer15_out_dout(231 downto 224);
    p_Val2_19_fu_815_p4 <= layer15_out_dout(239 downto 232);
    p_Val2_1_fu_415_p4 <= layer15_out_dout(79 downto 72);
    p_Val2_21_fu_245_p4 <= layer15_out_dout(255 downto 248);
    p_Val2_22_fu_595_p4 <= layer15_out_dout(151 downto 144);
    p_Val2_23_fu_615_p4 <= layer15_out_dout(159 downto 152);
    p_Val2_27_fu_235_p4 <= layer15_out_dout(247 downto 240);
    p_Val2_2_fu_435_p4 <= layer15_out_dout(87 downto 80);
    p_Val2_32_fu_987_p3 <= 
        trunc_ln44_5_fu_425_p4 when (icmp_ln1649_16_fu_981_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_33_fu_1015_p3 <= 
        trunc_ln44_6_fu_465_p4 when (icmp_ln1649_18_fu_1009_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_34_fu_1043_p3 <= 
        trunc_ln44_7_fu_505_p4 when (icmp_ln1649_20_fu_1037_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_35_fu_1071_p3 <= 
        trunc_ln44_8_fu_545_p4 when (icmp_ln1649_22_fu_1065_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_36_fu_1099_p3 <= 
        trunc_ln44_9_fu_585_p4 when (icmp_ln1649_24_fu_1093_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_37_fu_1127_p3 <= 
        trunc_ln44_1_fu_625_p4 when (icmp_ln1649_26_fu_1121_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_38_fu_1155_p3 <= 
        trunc_ln44_10_fu_665_p4 when (icmp_ln1649_28_fu_1149_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_39_fu_1183_p3 <= 
        trunc_ln44_11_fu_705_p4 when (icmp_ln1649_30_fu_1177_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_3_fu_455_p4 <= layer15_out_dout(95 downto 88);
    p_Val2_40_fu_1211_p3 <= 
        trunc_ln44_12_fu_745_p4 when (icmp_ln1649_32_fu_1205_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_41_fu_1239_p3 <= 
        trunc_ln44_13_fu_785_p4 when (icmp_ln1649_34_fu_1233_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_42_fu_1267_p3 <= 
        trunc_ln44_14_fu_825_p4 when (icmp_ln1649_36_fu_1261_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_43_fu_1295_p3 <= 
        trunc_ln1_fu_845_p4 when (icmp_ln1649_38_fu_1289_p2(0) = '1') else 
        ap_const_lv7_0;
    p_Val2_4_fu_475_p4 <= layer15_out_dout(103 downto 96);
    p_Val2_5_fu_495_p4 <= layer15_out_dout(111 downto 104);
    p_Val2_6_fu_515_p4 <= layer15_out_dout(119 downto 112);
    p_Val2_7_fu_535_p4 <= layer15_out_dout(127 downto 120);
    p_Val2_8_fu_555_p4 <= layer15_out_dout(135 downto 128);
    p_Val2_9_fu_575_p4 <= layer15_out_dout(143 downto 136);
    p_Val2_s_fu_395_p4 <= layer15_out_dout(71 downto 64);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln51_10_fu_1001_p3 <= 
        trunc_ln810_1_fu_445_p4 when (icmp_ln1649_17_fu_995_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_12_fu_1029_p3 <= 
        trunc_ln810_2_fu_485_p4 when (icmp_ln1649_19_fu_1023_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_14_fu_1057_p3 <= 
        trunc_ln810_3_fu_525_p4 when (icmp_ln1649_21_fu_1051_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_16_fu_1085_p3 <= 
        trunc_ln810_4_fu_565_p4 when (icmp_ln1649_23_fu_1079_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_18_fu_1113_p3 <= 
        trunc_ln810_5_fu_605_p4 when (icmp_ln1649_25_fu_1107_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_20_fu_1141_p3 <= 
        trunc_ln810_6_fu_645_p4 when (icmp_ln1649_27_fu_1135_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_22_fu_1169_p3 <= 
        trunc_ln810_7_fu_685_p4 when (icmp_ln1649_29_fu_1163_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_24_fu_1197_p3 <= 
        trunc_ln810_8_fu_725_p4 when (icmp_ln1649_31_fu_1191_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_26_fu_1225_p3 <= 
        trunc_ln810_9_fu_765_p4 when (icmp_ln1649_33_fu_1219_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_28_fu_1253_p3 <= 
        trunc_ln810_s_fu_805_p4 when (icmp_ln1649_35_fu_1247_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_2_fu_889_p3 <= 
        trunc_ln45_4_fu_285_p4 when (icmp_ln1649_9_fu_883_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_30_fu_1281_p3 <= 
        trunc_ln810_10_fu_835_p4 when (icmp_ln1649_37_fu_1275_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_4_fu_917_p3 <= 
        trunc_ln45_5_fu_325_p4 when (icmp_ln1649_11_fu_911_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_6_fu_945_p3 <= 
        trunc_ln45_6_fu_365_p4 when (icmp_ln1649_13_fu_939_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_8_fu_973_p3 <= 
        trunc_ln_fu_405_p4 when (icmp_ln1649_15_fu_967_p2(0) = '1') else 
        ap_const_lv7_0;
    select_ln51_fu_861_p3 <= 
        trunc_ln45_fu_231_p1 when (icmp_ln1649_fu_855_p2(0) = '1') else 
        ap_const_lv7_0;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1_fu_845_p4 <= layer15_out_dout(254 downto 248);
    trunc_ln44_10_fu_665_p4 <= layer15_out_dout(174 downto 168);
    trunc_ln44_11_fu_705_p4 <= layer15_out_dout(190 downto 184);
    trunc_ln44_12_fu_745_p4 <= layer15_out_dout(206 downto 200);
    trunc_ln44_13_fu_785_p4 <= layer15_out_dout(222 downto 216);
    trunc_ln44_14_fu_825_p4 <= layer15_out_dout(238 downto 232);
    trunc_ln44_1_fu_625_p4 <= layer15_out_dout(158 downto 152);
    trunc_ln44_2_fu_305_p4 <= layer15_out_dout(30 downto 24);
    trunc_ln44_3_fu_345_p4 <= layer15_out_dout(46 downto 40);
    trunc_ln44_4_fu_385_p4 <= layer15_out_dout(62 downto 56);
    trunc_ln44_5_fu_425_p4 <= layer15_out_dout(78 downto 72);
    trunc_ln44_6_fu_465_p4 <= layer15_out_dout(94 downto 88);
    trunc_ln44_7_fu_505_p4 <= layer15_out_dout(110 downto 104);
    trunc_ln44_8_fu_545_p4 <= layer15_out_dout(126 downto 120);
    trunc_ln44_9_fu_585_p4 <= layer15_out_dout(142 downto 136);
    trunc_ln44_s_fu_265_p4 <= layer15_out_dout(14 downto 8);
    trunc_ln45_4_fu_285_p4 <= layer15_out_dout(22 downto 16);
    trunc_ln45_5_fu_325_p4 <= layer15_out_dout(38 downto 32);
    trunc_ln45_6_fu_365_p4 <= layer15_out_dout(54 downto 48);
    trunc_ln45_fu_231_p1 <= layer15_out_dout(7 - 1 downto 0);
    trunc_ln810_10_fu_835_p4 <= layer15_out_dout(246 downto 240);
    trunc_ln810_1_fu_445_p4 <= layer15_out_dout(86 downto 80);
    trunc_ln810_2_fu_485_p4 <= layer15_out_dout(102 downto 96);
    trunc_ln810_3_fu_525_p4 <= layer15_out_dout(118 downto 112);
    trunc_ln810_4_fu_565_p4 <= layer15_out_dout(134 downto 128);
    trunc_ln810_5_fu_605_p4 <= layer15_out_dout(150 downto 144);
    trunc_ln810_6_fu_645_p4 <= layer15_out_dout(166 downto 160);
    trunc_ln810_7_fu_685_p4 <= layer15_out_dout(182 downto 176);
    trunc_ln810_8_fu_725_p4 <= layer15_out_dout(198 downto 192);
    trunc_ln810_9_fu_765_p4 <= layer15_out_dout(214 downto 208);
    trunc_ln810_s_fu_805_p4 <= layer15_out_dout(230 downto 224);
    trunc_ln_fu_405_p4 <= layer15_out_dout(70 downto 64);
    zext_ln1649_10_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_20_reg_1568),8));
    zext_ln1649_11_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_22_reg_1578),8));
    zext_ln1649_12_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_24_reg_1588),8));
    zext_ln1649_13_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_26_reg_1598),8));
    zext_ln1649_14_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_28_reg_1608),8));
    zext_ln1649_15_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_30_reg_1618),8));
    zext_ln1649_1_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_2_reg_1478),8));
    zext_ln1649_2_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_4_reg_1488),8));
    zext_ln1649_3_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_6_reg_1498),8));
    zext_ln1649_4_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_8_reg_1508),8));
    zext_ln1649_5_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_10_reg_1518),8));
    zext_ln1649_6_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_12_reg_1528),8));
    zext_ln1649_7_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_14_reg_1538),8));
    zext_ln1649_8_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_16_reg_1548),8));
    zext_ln1649_9_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_18_reg_1558),8));
    zext_ln1649_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_reg_1468),8));
    zext_ln51_10_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_36_reg_1553),8));
    zext_ln51_11_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_37_reg_1563),8));
    zext_ln51_12_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_38_reg_1573),8));
    zext_ln51_13_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_39_reg_1583),8));
    zext_ln51_14_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_40_reg_1593),8));
    zext_ln51_15_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_41_reg_1603),8));
    zext_ln51_16_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_42_reg_1613),8));
    zext_ln51_3_fu_1312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_data_data_22_reg_1483),8));
    zext_ln51_4_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_data_data_24_reg_1493),8));
    zext_ln51_5_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_data_data_26_reg_1503),8));
    zext_ln51_6_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_32_reg_1513),8));
    zext_ln51_7_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_33_reg_1523),8));
    zext_ln51_8_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_34_reg_1533),8));
    zext_ln51_9_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_35_reg_1543),8));
    zext_ln51_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_data_data_20_reg_1473),8));
end behav;
