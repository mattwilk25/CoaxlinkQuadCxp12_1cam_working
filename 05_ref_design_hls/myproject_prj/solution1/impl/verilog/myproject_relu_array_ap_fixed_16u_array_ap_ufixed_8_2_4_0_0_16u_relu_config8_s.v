// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_16u_array_ap_ufixed_8_2_4_0_0_16u_relu_config8_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        layer6_out_dout,
        layer6_out_num_data_valid,
        layer6_out_fifo_cap,
        layer6_out_empty_n,
        layer6_out_read,
        layer8_out_din,
        layer8_out_num_data_valid,
        layer8_out_fifo_cap,
        layer8_out_full_n,
        layer8_out_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] layer6_out_dout;
input  [6:0] layer6_out_num_data_valid;
input  [6:0] layer6_out_fifo_cap;
input   layer6_out_empty_n;
output   layer6_out_read;
output  [127:0] layer8_out_din;
input  [6:0] layer8_out_num_data_valid;
input  [6:0] layer8_out_fifo_cap;
input   layer8_out_full_n;
output   layer8_out_write;
output   start_out;
output   start_write;

reg ap_idle;
reg layer6_out_read;
reg layer8_out_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln41_fu_161_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    layer6_out_blk_n;
wire    ap_block_pp0_stage0;
reg    layer8_out_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] out_data_data_fu_492_p3;
reg   [6:0] out_data_data_reg_806;
wire   [6:0] out_data_data_41_fu_506_p3;
reg   [6:0] out_data_data_41_reg_811;
wire   [6:0] out_data_data_42_fu_520_p3;
reg   [6:0] out_data_data_42_reg_816;
wire   [6:0] out_data_data_44_fu_534_p3;
reg   [6:0] out_data_data_44_reg_821;
wire   [6:0] out_data_data_45_fu_548_p3;
reg   [6:0] out_data_data_45_reg_826;
wire   [6:0] out_data_data_47_fu_562_p3;
reg   [6:0] out_data_data_47_reg_831;
wire   [6:0] out_data_data_48_fu_576_p3;
reg   [6:0] out_data_data_48_reg_836;
wire   [6:0] out_data_data_50_fu_590_p3;
reg   [6:0] out_data_data_50_reg_841;
wire   [6:0] select_ln51_fu_604_p3;
reg   [6:0] select_ln51_reg_846;
wire   [6:0] p_Val2_183_fu_618_p3;
reg   [6:0] p_Val2_183_reg_851;
wire   [6:0] select_ln51_150_fu_632_p3;
reg   [6:0] select_ln51_150_reg_856;
wire   [6:0] p_Val2_184_fu_646_p3;
reg   [6:0] p_Val2_184_reg_861;
wire   [6:0] select_ln51_152_fu_660_p3;
reg   [6:0] select_ln51_152_reg_866;
wire   [6:0] p_Val2_185_fu_674_p3;
reg   [6:0] p_Val2_185_reg_871;
wire   [6:0] select_ln51_154_fu_688_p3;
reg   [6:0] select_ln51_154_reg_876;
wire   [6:0] p_Val2_186_fu_702_p3;
reg   [6:0] p_Val2_186_reg_881;
reg   [5:0] i_fu_136;
wire   [5:0] i_4_fu_167_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_3;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] out_data_data_51_fu_178_p1;
wire   [0:0] icmp_ln1649_fu_486_p2;
wire   [6:0] trunc_ln45_fu_182_p1;
wire   [7:0] in_data_data_fu_206_p4;
wire   [0:0] icmp_ln1649_154_fu_500_p2;
wire   [6:0] trunc_ln44_s_fu_216_p4;
wire   [7:0] out_data_data_52_fu_226_p4;
wire   [0:0] icmp_ln1649_155_fu_514_p2;
wire   [6:0] trunc_ln45_9_fu_236_p4;
wire   [7:0] in_data_data_34_fu_246_p4;
wire   [0:0] icmp_ln1649_156_fu_528_p2;
wire   [6:0] trunc_ln44_74_fu_256_p4;
wire   [7:0] out_data_data_53_fu_266_p4;
wire   [0:0] icmp_ln1649_157_fu_542_p2;
wire   [6:0] trunc_ln45_s_fu_276_p4;
wire   [7:0] in_data_data_35_fu_286_p4;
wire   [0:0] icmp_ln1649_158_fu_556_p2;
wire   [6:0] trunc_ln44_75_fu_296_p4;
wire   [7:0] out_data_data_54_fu_306_p4;
wire   [0:0] icmp_ln1649_159_fu_570_p2;
wire   [6:0] trunc_ln45_1_fu_316_p4;
wire   [7:0] in_data_data_36_fu_326_p4;
wire   [0:0] icmp_ln1649_160_fu_584_p2;
wire   [6:0] trunc_ln44_76_fu_336_p4;
wire   [7:0] p_Val2_s_fu_346_p4;
wire   [0:0] icmp_ln1649_161_fu_598_p2;
wire   [6:0] trunc_ln_fu_356_p4;
wire   [7:0] p_Val2_131_fu_366_p4;
wire   [0:0] icmp_ln1649_162_fu_612_p2;
wire   [6:0] trunc_ln44_77_fu_376_p4;
wire   [7:0] p_Val2_126_fu_386_p4;
wire   [0:0] icmp_ln1649_163_fu_626_p2;
wire   [6:0] trunc_ln810_s_fu_396_p4;
wire   [7:0] p_Val2_127_fu_406_p4;
wire   [0:0] icmp_ln1649_164_fu_640_p2;
wire   [6:0] trunc_ln44_78_fu_416_p4;
wire   [7:0] p_Val2_128_fu_426_p4;
wire   [0:0] icmp_ln1649_165_fu_654_p2;
wire   [6:0] trunc_ln810_64_fu_436_p4;
wire   [7:0] p_Val2_129_fu_446_p4;
wire   [0:0] icmp_ln1649_166_fu_668_p2;
wire   [6:0] trunc_ln44_79_fu_456_p4;
wire   [7:0] p_Val2_178_fu_186_p4;
wire   [0:0] icmp_ln1649_167_fu_682_p2;
wire   [6:0] trunc_ln810_65_fu_466_p4;
wire   [7:0] p_Val2_130_fu_196_p4;
wire   [0:0] icmp_ln1649_168_fu_696_p2;
wire   [6:0] trunc_ln3_fu_476_p4;
wire   [7:0] zext_ln1649_76_fu_752_p1;
wire   [7:0] zext_ln51_78_fu_749_p1;
wire   [7:0] zext_ln1649_75_fu_746_p1;
wire   [7:0] zext_ln51_77_fu_743_p1;
wire   [7:0] zext_ln1649_74_fu_740_p1;
wire   [7:0] zext_ln51_76_fu_737_p1;
wire   [7:0] zext_ln1649_fu_734_p1;
wire   [7:0] zext_ln51_75_fu_731_p1;
wire   [7:0] zext_ln45_5_fu_728_p1;
wire   [7:0] zext_ln51_74_fu_725_p1;
wire   [7:0] zext_ln45_4_fu_722_p1;
wire   [7:0] zext_ln51_73_fu_719_p1;
wire   [7:0] zext_ln45_3_fu_716_p1;
wire   [7:0] zext_ln51_fu_713_p1;
wire   [7:0] zext_ln45_fu_710_p1;
wire   [126:0] or_ln57_s_fu_755_p17;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_142;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

myproject_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_142)) begin
        if ((icmp_ln41_fu_161_p2 == 1'd0)) begin
            i_fu_136 <= i_4_fu_167_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_136 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        out_data_data_41_reg_811 <= out_data_data_41_fu_506_p3;
        out_data_data_42_reg_816 <= out_data_data_42_fu_520_p3;
        out_data_data_44_reg_821 <= out_data_data_44_fu_534_p3;
        out_data_data_45_reg_826 <= out_data_data_45_fu_548_p3;
        out_data_data_47_reg_831 <= out_data_data_47_fu_562_p3;
        out_data_data_48_reg_836 <= out_data_data_48_fu_576_p3;
        out_data_data_50_reg_841 <= out_data_data_50_fu_590_p3;
        out_data_data_reg_806 <= out_data_data_fu_492_p3;
        p_Val2_183_reg_851 <= p_Val2_183_fu_618_p3;
        p_Val2_184_reg_861 <= p_Val2_184_fu_646_p3;
        p_Val2_185_reg_871 <= p_Val2_185_fu_674_p3;
        p_Val2_186_reg_881 <= p_Val2_186_fu_702_p3;
        select_ln51_150_reg_856 <= select_ln51_150_fu_632_p3;
        select_ln51_152_reg_866 <= select_ln51_152_fu_660_p3;
        select_ln51_154_reg_876 <= select_ln51_154_fu_688_p3;
        select_ln51_reg_846 <= select_ln51_fu_604_p3;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_161_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_3 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer6_out_blk_n = layer6_out_empty_n;
    end else begin
        layer6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer6_out_read = 1'b1;
    end else begin
        layer6_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer8_out_blk_n = layer8_out_full_n;
    end else begin
        layer8_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer8_out_write = 1'b1;
    end else begin
        layer8_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((layer8_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer6_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((layer8_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer6_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((layer8_out_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((layer6_out_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (layer6_out_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (layer8_out_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_142 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = internal_ap_ready;

assign i_4_fu_167_p2 = (ap_sig_allocacmp_i_3 + 6'd1);

assign icmp_ln1649_154_fu_500_p2 = (($signed(in_data_data_fu_206_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_155_fu_514_p2 = (($signed(out_data_data_52_fu_226_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_156_fu_528_p2 = (($signed(in_data_data_34_fu_246_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_157_fu_542_p2 = (($signed(out_data_data_53_fu_266_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_158_fu_556_p2 = (($signed(in_data_data_35_fu_286_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_159_fu_570_p2 = (($signed(out_data_data_54_fu_306_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_160_fu_584_p2 = (($signed(in_data_data_36_fu_326_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_161_fu_598_p2 = (($signed(p_Val2_s_fu_346_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_162_fu_612_p2 = (($signed(p_Val2_131_fu_366_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_163_fu_626_p2 = (($signed(p_Val2_126_fu_386_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_164_fu_640_p2 = (($signed(p_Val2_127_fu_406_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_165_fu_654_p2 = (($signed(p_Val2_128_fu_426_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_166_fu_668_p2 = (($signed(p_Val2_129_fu_446_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_167_fu_682_p2 = (($signed(p_Val2_178_fu_186_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_168_fu_696_p2 = (($signed(p_Val2_130_fu_196_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_486_p2 = (($signed(out_data_data_51_fu_178_p1) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_161_p2 = ((ap_sig_allocacmp_i_3 == 6'd49) ? 1'b1 : 1'b0);

assign in_data_data_34_fu_246_p4 = {{layer6_out_dout[31:24]}};

assign in_data_data_35_fu_286_p4 = {{layer6_out_dout[47:40]}};

assign in_data_data_36_fu_326_p4 = {{layer6_out_dout[63:56]}};

assign in_data_data_fu_206_p4 = {{layer6_out_dout[15:8]}};

assign layer8_out_din = or_ln57_s_fu_755_p17;

assign or_ln57_s_fu_755_p17 = {{{{{{{{{{{{{{{{p_Val2_186_reg_881}, {zext_ln1649_76_fu_752_p1}}, {zext_ln51_78_fu_749_p1}}, {zext_ln1649_75_fu_746_p1}}, {zext_ln51_77_fu_743_p1}}, {zext_ln1649_74_fu_740_p1}}, {zext_ln51_76_fu_737_p1}}, {zext_ln1649_fu_734_p1}}, {zext_ln51_75_fu_731_p1}}, {zext_ln45_5_fu_728_p1}}, {zext_ln51_74_fu_725_p1}}, {zext_ln45_4_fu_722_p1}}, {zext_ln51_73_fu_719_p1}}, {zext_ln45_3_fu_716_p1}}, {zext_ln51_fu_713_p1}}, {zext_ln45_fu_710_p1}};

assign out_data_data_41_fu_506_p3 = ((icmp_ln1649_154_fu_500_p2[0:0] == 1'b1) ? trunc_ln44_s_fu_216_p4 : 7'd0);

assign out_data_data_42_fu_520_p3 = ((icmp_ln1649_155_fu_514_p2[0:0] == 1'b1) ? trunc_ln45_9_fu_236_p4 : 7'd0);

assign out_data_data_44_fu_534_p3 = ((icmp_ln1649_156_fu_528_p2[0:0] == 1'b1) ? trunc_ln44_74_fu_256_p4 : 7'd0);

assign out_data_data_45_fu_548_p3 = ((icmp_ln1649_157_fu_542_p2[0:0] == 1'b1) ? trunc_ln45_s_fu_276_p4 : 7'd0);

assign out_data_data_47_fu_562_p3 = ((icmp_ln1649_158_fu_556_p2[0:0] == 1'b1) ? trunc_ln44_75_fu_296_p4 : 7'd0);

assign out_data_data_48_fu_576_p3 = ((icmp_ln1649_159_fu_570_p2[0:0] == 1'b1) ? trunc_ln45_1_fu_316_p4 : 7'd0);

assign out_data_data_50_fu_590_p3 = ((icmp_ln1649_160_fu_584_p2[0:0] == 1'b1) ? trunc_ln44_76_fu_336_p4 : 7'd0);

assign out_data_data_51_fu_178_p1 = layer6_out_dout[7:0];

assign out_data_data_52_fu_226_p4 = {{layer6_out_dout[23:16]}};

assign out_data_data_53_fu_266_p4 = {{layer6_out_dout[39:32]}};

assign out_data_data_54_fu_306_p4 = {{layer6_out_dout[55:48]}};

assign out_data_data_fu_492_p3 = ((icmp_ln1649_fu_486_p2[0:0] == 1'b1) ? trunc_ln45_fu_182_p1 : 7'd0);

assign p_Val2_126_fu_386_p4 = {{layer6_out_dout[87:80]}};

assign p_Val2_127_fu_406_p4 = {{layer6_out_dout[95:88]}};

assign p_Val2_128_fu_426_p4 = {{layer6_out_dout[103:96]}};

assign p_Val2_129_fu_446_p4 = {{layer6_out_dout[111:104]}};

assign p_Val2_130_fu_196_p4 = {{layer6_out_dout[127:120]}};

assign p_Val2_131_fu_366_p4 = {{layer6_out_dout[79:72]}};

assign p_Val2_178_fu_186_p4 = {{layer6_out_dout[119:112]}};

assign p_Val2_183_fu_618_p3 = ((icmp_ln1649_162_fu_612_p2[0:0] == 1'b1) ? trunc_ln44_77_fu_376_p4 : 7'd0);

assign p_Val2_184_fu_646_p3 = ((icmp_ln1649_164_fu_640_p2[0:0] == 1'b1) ? trunc_ln44_78_fu_416_p4 : 7'd0);

assign p_Val2_185_fu_674_p3 = ((icmp_ln1649_166_fu_668_p2[0:0] == 1'b1) ? trunc_ln44_79_fu_456_p4 : 7'd0);

assign p_Val2_186_fu_702_p3 = ((icmp_ln1649_168_fu_696_p2[0:0] == 1'b1) ? trunc_ln3_fu_476_p4 : 7'd0);

assign p_Val2_s_fu_346_p4 = {{layer6_out_dout[71:64]}};

assign select_ln51_150_fu_632_p3 = ((icmp_ln1649_163_fu_626_p2[0:0] == 1'b1) ? trunc_ln810_s_fu_396_p4 : 7'd0);

assign select_ln51_152_fu_660_p3 = ((icmp_ln1649_165_fu_654_p2[0:0] == 1'b1) ? trunc_ln810_64_fu_436_p4 : 7'd0);

assign select_ln51_154_fu_688_p3 = ((icmp_ln1649_167_fu_682_p2[0:0] == 1'b1) ? trunc_ln810_65_fu_466_p4 : 7'd0);

assign select_ln51_fu_604_p3 = ((icmp_ln1649_161_fu_598_p2[0:0] == 1'b1) ? trunc_ln_fu_356_p4 : 7'd0);

assign start_out = real_start;

assign trunc_ln3_fu_476_p4 = {{layer6_out_dout[126:120]}};

assign trunc_ln44_74_fu_256_p4 = {{layer6_out_dout[30:24]}};

assign trunc_ln44_75_fu_296_p4 = {{layer6_out_dout[46:40]}};

assign trunc_ln44_76_fu_336_p4 = {{layer6_out_dout[62:56]}};

assign trunc_ln44_77_fu_376_p4 = {{layer6_out_dout[78:72]}};

assign trunc_ln44_78_fu_416_p4 = {{layer6_out_dout[94:88]}};

assign trunc_ln44_79_fu_456_p4 = {{layer6_out_dout[110:104]}};

assign trunc_ln44_s_fu_216_p4 = {{layer6_out_dout[14:8]}};

assign trunc_ln45_1_fu_316_p4 = {{layer6_out_dout[54:48]}};

assign trunc_ln45_9_fu_236_p4 = {{layer6_out_dout[22:16]}};

assign trunc_ln45_fu_182_p1 = layer6_out_dout[6:0];

assign trunc_ln45_s_fu_276_p4 = {{layer6_out_dout[38:32]}};

assign trunc_ln810_64_fu_436_p4 = {{layer6_out_dout[102:96]}};

assign trunc_ln810_65_fu_466_p4 = {{layer6_out_dout[118:112]}};

assign trunc_ln810_s_fu_396_p4 = {{layer6_out_dout[86:80]}};

assign trunc_ln_fu_356_p4 = {{layer6_out_dout[70:64]}};

assign zext_ln1649_74_fu_740_p1 = select_ln51_150_reg_856;

assign zext_ln1649_75_fu_746_p1 = select_ln51_152_reg_866;

assign zext_ln1649_76_fu_752_p1 = select_ln51_154_reg_876;

assign zext_ln1649_fu_734_p1 = select_ln51_reg_846;

assign zext_ln45_3_fu_716_p1 = out_data_data_42_reg_816;

assign zext_ln45_4_fu_722_p1 = out_data_data_45_reg_826;

assign zext_ln45_5_fu_728_p1 = out_data_data_48_reg_836;

assign zext_ln45_fu_710_p1 = out_data_data_reg_806;

assign zext_ln51_73_fu_719_p1 = out_data_data_44_reg_821;

assign zext_ln51_74_fu_725_p1 = out_data_data_47_reg_831;

assign zext_ln51_75_fu_731_p1 = out_data_data_50_reg_841;

assign zext_ln51_76_fu_737_p1 = p_Val2_183_reg_851;

assign zext_ln51_77_fu_743_p1 = p_Val2_184_reg_861;

assign zext_ln51_78_fu_749_p1 = p_Val2_185_reg_871;

assign zext_ln51_fu_713_p1 = out_data_data_41_reg_811;

endmodule //myproject_relu_array_ap_fixed_16u_array_ap_ufixed_8_2_4_0_0_16u_relu_config8_s
