// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_32u_array_ap_ufixed_8_2_4_0_0_32u_relu_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer17_out_din,
        layer17_out_num_data_valid,
        layer17_out_fifo_cap,
        layer17_out_full_n,
        layer17_out_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [255:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [255:0] layer17_out_din;
input  [1:0] layer17_out_num_data_valid;
input  [1:0] layer17_out_fifo_cap;
input   layer17_out_full_n;
output   layer17_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer15_out_read;
reg layer17_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    layer15_out_blk_n;
reg    layer17_out_blk_n;
wire    ap_CS_fsm_state2;
wire   [6:0] select_ln51_fu_861_p3;
reg   [6:0] select_ln51_reg_1468;
wire   [6:0] out_data_data_20_fu_875_p3;
reg   [6:0] out_data_data_20_reg_1473;
wire   [6:0] select_ln51_2_fu_889_p3;
reg   [6:0] select_ln51_2_reg_1478;
wire   [6:0] out_data_data_22_fu_903_p3;
reg   [6:0] out_data_data_22_reg_1483;
wire   [6:0] select_ln51_4_fu_917_p3;
reg   [6:0] select_ln51_4_reg_1488;
wire   [6:0] out_data_data_24_fu_931_p3;
reg   [6:0] out_data_data_24_reg_1493;
wire   [6:0] select_ln51_6_fu_945_p3;
reg   [6:0] select_ln51_6_reg_1498;
wire   [6:0] out_data_data_26_fu_959_p3;
reg   [6:0] out_data_data_26_reg_1503;
wire   [6:0] select_ln51_8_fu_973_p3;
reg   [6:0] select_ln51_8_reg_1508;
wire   [6:0] p_Val2_32_fu_987_p3;
reg   [6:0] p_Val2_32_reg_1513;
wire   [6:0] select_ln51_10_fu_1001_p3;
reg   [6:0] select_ln51_10_reg_1518;
wire   [6:0] p_Val2_33_fu_1015_p3;
reg   [6:0] p_Val2_33_reg_1523;
wire   [6:0] select_ln51_12_fu_1029_p3;
reg   [6:0] select_ln51_12_reg_1528;
wire   [6:0] p_Val2_34_fu_1043_p3;
reg   [6:0] p_Val2_34_reg_1533;
wire   [6:0] select_ln51_14_fu_1057_p3;
reg   [6:0] select_ln51_14_reg_1538;
wire   [6:0] p_Val2_35_fu_1071_p3;
reg   [6:0] p_Val2_35_reg_1543;
wire   [6:0] select_ln51_16_fu_1085_p3;
reg   [6:0] select_ln51_16_reg_1548;
wire   [6:0] p_Val2_36_fu_1099_p3;
reg   [6:0] p_Val2_36_reg_1553;
wire   [6:0] select_ln51_18_fu_1113_p3;
reg   [6:0] select_ln51_18_reg_1558;
wire   [6:0] p_Val2_37_fu_1127_p3;
reg   [6:0] p_Val2_37_reg_1563;
wire   [6:0] select_ln51_20_fu_1141_p3;
reg   [6:0] select_ln51_20_reg_1568;
wire   [6:0] p_Val2_38_fu_1155_p3;
reg   [6:0] p_Val2_38_reg_1573;
wire   [6:0] select_ln51_22_fu_1169_p3;
reg   [6:0] select_ln51_22_reg_1578;
wire   [6:0] p_Val2_39_fu_1183_p3;
reg   [6:0] p_Val2_39_reg_1583;
wire   [6:0] select_ln51_24_fu_1197_p3;
reg   [6:0] select_ln51_24_reg_1588;
wire   [6:0] p_Val2_40_fu_1211_p3;
reg   [6:0] p_Val2_40_reg_1593;
wire   [6:0] select_ln51_26_fu_1225_p3;
reg   [6:0] select_ln51_26_reg_1598;
wire   [6:0] p_Val2_41_fu_1239_p3;
reg   [6:0] p_Val2_41_reg_1603;
wire   [6:0] select_ln51_28_fu_1253_p3;
reg   [6:0] select_ln51_28_reg_1608;
wire   [6:0] p_Val2_42_fu_1267_p3;
reg   [6:0] p_Val2_42_reg_1613;
wire   [6:0] select_ln51_30_fu_1281_p3;
reg   [6:0] select_ln51_30_reg_1618;
wire   [6:0] p_Val2_43_fu_1295_p3;
reg   [6:0] p_Val2_43_reg_1623;
reg    ap_block_state1;
wire   [7:0] out_data_data_27_fu_227_p1;
wire   [0:0] icmp_ln1649_fu_855_p2;
wire   [6:0] trunc_ln45_fu_231_p1;
wire   [7:0] in_data_data_fu_255_p4;
wire   [0:0] icmp_ln1649_8_fu_869_p2;
wire   [6:0] trunc_ln44_s_fu_265_p4;
wire   [7:0] out_data_data_fu_275_p4;
wire   [0:0] icmp_ln1649_9_fu_883_p2;
wire   [6:0] trunc_ln45_4_fu_285_p4;
wire   [7:0] in_data_data_18_fu_295_p4;
wire   [0:0] icmp_ln1649_10_fu_897_p2;
wire   [6:0] trunc_ln44_2_fu_305_p4;
wire   [7:0] out_data_data_28_fu_315_p4;
wire   [0:0] icmp_ln1649_11_fu_911_p2;
wire   [6:0] trunc_ln45_5_fu_325_p4;
wire   [7:0] in_data_data_19_fu_335_p4;
wire   [0:0] icmp_ln1649_12_fu_925_p2;
wire   [6:0] trunc_ln44_3_fu_345_p4;
wire   [7:0] out_data_data_29_fu_355_p4;
wire   [0:0] icmp_ln1649_13_fu_939_p2;
wire   [6:0] trunc_ln45_6_fu_365_p4;
wire   [7:0] in_data_data_20_fu_375_p4;
wire   [0:0] icmp_ln1649_14_fu_953_p2;
wire   [6:0] trunc_ln44_4_fu_385_p4;
wire   [7:0] p_Val2_s_fu_395_p4;
wire   [0:0] icmp_ln1649_15_fu_967_p2;
wire   [6:0] trunc_ln_fu_405_p4;
wire   [7:0] p_Val2_1_fu_415_p4;
wire   [0:0] icmp_ln1649_16_fu_981_p2;
wire   [6:0] trunc_ln44_5_fu_425_p4;
wire   [7:0] p_Val2_2_fu_435_p4;
wire   [0:0] icmp_ln1649_17_fu_995_p2;
wire   [6:0] trunc_ln810_1_fu_445_p4;
wire   [7:0] p_Val2_3_fu_455_p4;
wire   [0:0] icmp_ln1649_18_fu_1009_p2;
wire   [6:0] trunc_ln44_6_fu_465_p4;
wire   [7:0] p_Val2_4_fu_475_p4;
wire   [0:0] icmp_ln1649_19_fu_1023_p2;
wire   [6:0] trunc_ln810_2_fu_485_p4;
wire   [7:0] p_Val2_5_fu_495_p4;
wire   [0:0] icmp_ln1649_20_fu_1037_p2;
wire   [6:0] trunc_ln44_7_fu_505_p4;
wire   [7:0] p_Val2_6_fu_515_p4;
wire   [0:0] icmp_ln1649_21_fu_1051_p2;
wire   [6:0] trunc_ln810_3_fu_525_p4;
wire   [7:0] p_Val2_7_fu_535_p4;
wire   [0:0] icmp_ln1649_22_fu_1065_p2;
wire   [6:0] trunc_ln44_8_fu_545_p4;
wire   [7:0] p_Val2_8_fu_555_p4;
wire   [0:0] icmp_ln1649_23_fu_1079_p2;
wire   [6:0] trunc_ln810_4_fu_565_p4;
wire   [7:0] p_Val2_9_fu_575_p4;
wire   [0:0] icmp_ln1649_24_fu_1093_p2;
wire   [6:0] trunc_ln44_9_fu_585_p4;
wire   [7:0] p_Val2_22_fu_595_p4;
wire   [0:0] icmp_ln1649_25_fu_1107_p2;
wire   [6:0] trunc_ln810_5_fu_605_p4;
wire   [7:0] p_Val2_23_fu_615_p4;
wire   [0:0] icmp_ln1649_26_fu_1121_p2;
wire   [6:0] trunc_ln44_1_fu_625_p4;
wire   [7:0] p_Val2_10_fu_635_p4;
wire   [0:0] icmp_ln1649_27_fu_1135_p2;
wire   [6:0] trunc_ln810_6_fu_645_p4;
wire   [7:0] p_Val2_11_fu_655_p4;
wire   [0:0] icmp_ln1649_28_fu_1149_p2;
wire   [6:0] trunc_ln44_10_fu_665_p4;
wire   [7:0] p_Val2_12_fu_675_p4;
wire   [0:0] icmp_ln1649_29_fu_1163_p2;
wire   [6:0] trunc_ln810_7_fu_685_p4;
wire   [7:0] p_Val2_13_fu_695_p4;
wire   [0:0] icmp_ln1649_30_fu_1177_p2;
wire   [6:0] trunc_ln44_11_fu_705_p4;
wire   [7:0] p_Val2_14_fu_715_p4;
wire   [0:0] icmp_ln1649_31_fu_1191_p2;
wire   [6:0] trunc_ln810_8_fu_725_p4;
wire   [7:0] p_Val2_15_fu_735_p4;
wire   [0:0] icmp_ln1649_32_fu_1205_p2;
wire   [6:0] trunc_ln44_12_fu_745_p4;
wire   [7:0] p_Val2_16_fu_755_p4;
wire   [0:0] icmp_ln1649_33_fu_1219_p2;
wire   [6:0] trunc_ln810_9_fu_765_p4;
wire   [7:0] p_Val2_17_fu_775_p4;
wire   [0:0] icmp_ln1649_34_fu_1233_p2;
wire   [6:0] trunc_ln44_13_fu_785_p4;
wire   [7:0] p_Val2_18_fu_795_p4;
wire   [0:0] icmp_ln1649_35_fu_1247_p2;
wire   [6:0] trunc_ln810_s_fu_805_p4;
wire   [7:0] p_Val2_19_fu_815_p4;
wire   [0:0] icmp_ln1649_36_fu_1261_p2;
wire   [6:0] trunc_ln44_14_fu_825_p4;
wire   [7:0] p_Val2_27_fu_235_p4;
wire   [0:0] icmp_ln1649_37_fu_1275_p2;
wire   [6:0] trunc_ln810_10_fu_835_p4;
wire   [7:0] p_Val2_21_fu_245_p4;
wire   [0:0] icmp_ln1649_38_fu_1289_p2;
wire   [6:0] trunc_ln1_fu_845_p4;
wire   [7:0] zext_ln1649_15_fu_1393_p1;
wire   [7:0] zext_ln51_16_fu_1390_p1;
wire   [7:0] zext_ln1649_14_fu_1387_p1;
wire   [7:0] zext_ln51_15_fu_1384_p1;
wire   [7:0] zext_ln1649_13_fu_1381_p1;
wire   [7:0] zext_ln51_14_fu_1378_p1;
wire   [7:0] zext_ln1649_12_fu_1375_p1;
wire   [7:0] zext_ln51_13_fu_1372_p1;
wire   [7:0] zext_ln1649_11_fu_1369_p1;
wire   [7:0] zext_ln51_12_fu_1366_p1;
wire   [7:0] zext_ln1649_10_fu_1363_p1;
wire   [7:0] zext_ln51_11_fu_1360_p1;
wire   [7:0] zext_ln1649_9_fu_1357_p1;
wire   [7:0] zext_ln51_10_fu_1354_p1;
wire   [7:0] zext_ln1649_8_fu_1351_p1;
wire   [7:0] zext_ln51_9_fu_1348_p1;
wire   [7:0] zext_ln1649_7_fu_1345_p1;
wire   [7:0] zext_ln51_8_fu_1342_p1;
wire   [7:0] zext_ln1649_6_fu_1339_p1;
wire   [7:0] zext_ln51_7_fu_1336_p1;
wire   [7:0] zext_ln1649_5_fu_1333_p1;
wire   [7:0] zext_ln51_6_fu_1330_p1;
wire   [7:0] zext_ln1649_4_fu_1327_p1;
wire   [7:0] zext_ln51_5_fu_1324_p1;
wire   [7:0] zext_ln1649_3_fu_1321_p1;
wire   [7:0] zext_ln51_4_fu_1318_p1;
wire   [7:0] zext_ln1649_2_fu_1315_p1;
wire   [7:0] zext_ln51_3_fu_1312_p1;
wire   [7:0] zext_ln1649_1_fu_1309_p1;
wire   [7:0] zext_ln51_fu_1306_p1;
wire   [7:0] zext_ln1649_fu_1303_p1;
wire   [254:0] or_ln57_s_fu_1396_p33;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        out_data_data_20_reg_1473 <= out_data_data_20_fu_875_p3;
        out_data_data_22_reg_1483 <= out_data_data_22_fu_903_p3;
        out_data_data_24_reg_1493 <= out_data_data_24_fu_931_p3;
        out_data_data_26_reg_1503 <= out_data_data_26_fu_959_p3;
        p_Val2_32_reg_1513 <= p_Val2_32_fu_987_p3;
        p_Val2_33_reg_1523 <= p_Val2_33_fu_1015_p3;
        p_Val2_34_reg_1533 <= p_Val2_34_fu_1043_p3;
        p_Val2_35_reg_1543 <= p_Val2_35_fu_1071_p3;
        p_Val2_36_reg_1553 <= p_Val2_36_fu_1099_p3;
        p_Val2_37_reg_1563 <= p_Val2_37_fu_1127_p3;
        p_Val2_38_reg_1573 <= p_Val2_38_fu_1155_p3;
        p_Val2_39_reg_1583 <= p_Val2_39_fu_1183_p3;
        p_Val2_40_reg_1593 <= p_Val2_40_fu_1211_p3;
        p_Val2_41_reg_1603 <= p_Val2_41_fu_1239_p3;
        p_Val2_42_reg_1613 <= p_Val2_42_fu_1267_p3;
        p_Val2_43_reg_1623 <= p_Val2_43_fu_1295_p3;
        select_ln51_10_reg_1518 <= select_ln51_10_fu_1001_p3;
        select_ln51_12_reg_1528 <= select_ln51_12_fu_1029_p3;
        select_ln51_14_reg_1538 <= select_ln51_14_fu_1057_p3;
        select_ln51_16_reg_1548 <= select_ln51_16_fu_1085_p3;
        select_ln51_18_reg_1558 <= select_ln51_18_fu_1113_p3;
        select_ln51_20_reg_1568 <= select_ln51_20_fu_1141_p3;
        select_ln51_22_reg_1578 <= select_ln51_22_fu_1169_p3;
        select_ln51_24_reg_1588 <= select_ln51_24_fu_1197_p3;
        select_ln51_26_reg_1598 <= select_ln51_26_fu_1225_p3;
        select_ln51_28_reg_1608 <= select_ln51_28_fu_1253_p3;
        select_ln51_2_reg_1478 <= select_ln51_2_fu_889_p3;
        select_ln51_30_reg_1618 <= select_ln51_30_fu_1281_p3;
        select_ln51_4_reg_1488 <= select_ln51_4_fu_917_p3;
        select_ln51_6_reg_1498 <= select_ln51_6_fu_945_p3;
        select_ln51_8_reg_1508 <= select_ln51_8_fu_973_p3;
        select_ln51_reg_1468 <= select_ln51_fu_861_p3;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((layer17_out_full_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read = 1'b1;
    end else begin
        layer15_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer17_out_blk_n = layer17_out_full_n;
    end else begin
        layer17_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        layer17_out_write = 1'b1;
    end else begin
        layer17_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((layer17_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (layer15_out_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln1649_10_fu_897_p2 = (($signed(in_data_data_18_fu_295_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_11_fu_911_p2 = (($signed(out_data_data_28_fu_315_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_12_fu_925_p2 = (($signed(in_data_data_19_fu_335_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_13_fu_939_p2 = (($signed(out_data_data_29_fu_355_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_14_fu_953_p2 = (($signed(in_data_data_20_fu_375_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_15_fu_967_p2 = (($signed(p_Val2_s_fu_395_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_16_fu_981_p2 = (($signed(p_Val2_1_fu_415_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_17_fu_995_p2 = (($signed(p_Val2_2_fu_435_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_18_fu_1009_p2 = (($signed(p_Val2_3_fu_455_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_19_fu_1023_p2 = (($signed(p_Val2_4_fu_475_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_20_fu_1037_p2 = (($signed(p_Val2_5_fu_495_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_21_fu_1051_p2 = (($signed(p_Val2_6_fu_515_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_22_fu_1065_p2 = (($signed(p_Val2_7_fu_535_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_23_fu_1079_p2 = (($signed(p_Val2_8_fu_555_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_24_fu_1093_p2 = (($signed(p_Val2_9_fu_575_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_25_fu_1107_p2 = (($signed(p_Val2_22_fu_595_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_26_fu_1121_p2 = (($signed(p_Val2_23_fu_615_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_27_fu_1135_p2 = (($signed(p_Val2_10_fu_635_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_28_fu_1149_p2 = (($signed(p_Val2_11_fu_655_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_29_fu_1163_p2 = (($signed(p_Val2_12_fu_675_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_30_fu_1177_p2 = (($signed(p_Val2_13_fu_695_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_31_fu_1191_p2 = (($signed(p_Val2_14_fu_715_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_32_fu_1205_p2 = (($signed(p_Val2_15_fu_735_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_33_fu_1219_p2 = (($signed(p_Val2_16_fu_755_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_34_fu_1233_p2 = (($signed(p_Val2_17_fu_775_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_35_fu_1247_p2 = (($signed(p_Val2_18_fu_795_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_36_fu_1261_p2 = (($signed(p_Val2_19_fu_815_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_37_fu_1275_p2 = (($signed(p_Val2_27_fu_235_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_38_fu_1289_p2 = (($signed(p_Val2_21_fu_245_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_8_fu_869_p2 = (($signed(in_data_data_fu_255_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_9_fu_883_p2 = (($signed(out_data_data_fu_275_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_855_p2 = (($signed(out_data_data_27_fu_227_p1) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign in_data_data_18_fu_295_p4 = {{layer15_out_dout[31:24]}};

assign in_data_data_19_fu_335_p4 = {{layer15_out_dout[47:40]}};

assign in_data_data_20_fu_375_p4 = {{layer15_out_dout[63:56]}};

assign in_data_data_fu_255_p4 = {{layer15_out_dout[15:8]}};

assign layer17_out_din = or_ln57_s_fu_1396_p33;

assign or_ln57_s_fu_1396_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{p_Val2_43_reg_1623}, {zext_ln1649_15_fu_1393_p1}}, {zext_ln51_16_fu_1390_p1}}, {zext_ln1649_14_fu_1387_p1}}, {zext_ln51_15_fu_1384_p1}}, {zext_ln1649_13_fu_1381_p1}}, {zext_ln51_14_fu_1378_p1}}, {zext_ln1649_12_fu_1375_p1}}, {zext_ln51_13_fu_1372_p1}}, {zext_ln1649_11_fu_1369_p1}}, {zext_ln51_12_fu_1366_p1}}, {zext_ln1649_10_fu_1363_p1}}, {zext_ln51_11_fu_1360_p1}}, {zext_ln1649_9_fu_1357_p1}}, {zext_ln51_10_fu_1354_p1}}, {zext_ln1649_8_fu_1351_p1}}, {zext_ln51_9_fu_1348_p1}}, {zext_ln1649_7_fu_1345_p1}}, {zext_ln51_8_fu_1342_p1}}, {zext_ln1649_6_fu_1339_p1}}, {zext_ln51_7_fu_1336_p1}}, {zext_ln1649_5_fu_1333_p1}}, {zext_ln51_6_fu_1330_p1}}, {zext_ln1649_4_fu_1327_p1}}, {zext_ln51_5_fu_1324_p1}}, {zext_ln1649_3_fu_1321_p1}}, {zext_ln51_4_fu_1318_p1}}, {zext_ln1649_2_fu_1315_p1}}, {zext_ln51_3_fu_1312_p1}}, {zext_ln1649_1_fu_1309_p1}}, {zext_ln51_fu_1306_p1}}, {zext_ln1649_fu_1303_p1}};

assign out_data_data_20_fu_875_p3 = ((icmp_ln1649_8_fu_869_p2[0:0] == 1'b1) ? trunc_ln44_s_fu_265_p4 : 7'd0);

assign out_data_data_22_fu_903_p3 = ((icmp_ln1649_10_fu_897_p2[0:0] == 1'b1) ? trunc_ln44_2_fu_305_p4 : 7'd0);

assign out_data_data_24_fu_931_p3 = ((icmp_ln1649_12_fu_925_p2[0:0] == 1'b1) ? trunc_ln44_3_fu_345_p4 : 7'd0);

assign out_data_data_26_fu_959_p3 = ((icmp_ln1649_14_fu_953_p2[0:0] == 1'b1) ? trunc_ln44_4_fu_385_p4 : 7'd0);

assign out_data_data_27_fu_227_p1 = layer15_out_dout[7:0];

assign out_data_data_28_fu_315_p4 = {{layer15_out_dout[39:32]}};

assign out_data_data_29_fu_355_p4 = {{layer15_out_dout[55:48]}};

assign out_data_data_fu_275_p4 = {{layer15_out_dout[23:16]}};

assign p_Val2_10_fu_635_p4 = {{layer15_out_dout[167:160]}};

assign p_Val2_11_fu_655_p4 = {{layer15_out_dout[175:168]}};

assign p_Val2_12_fu_675_p4 = {{layer15_out_dout[183:176]}};

assign p_Val2_13_fu_695_p4 = {{layer15_out_dout[191:184]}};

assign p_Val2_14_fu_715_p4 = {{layer15_out_dout[199:192]}};

assign p_Val2_15_fu_735_p4 = {{layer15_out_dout[207:200]}};

assign p_Val2_16_fu_755_p4 = {{layer15_out_dout[215:208]}};

assign p_Val2_17_fu_775_p4 = {{layer15_out_dout[223:216]}};

assign p_Val2_18_fu_795_p4 = {{layer15_out_dout[231:224]}};

assign p_Val2_19_fu_815_p4 = {{layer15_out_dout[239:232]}};

assign p_Val2_1_fu_415_p4 = {{layer15_out_dout[79:72]}};

assign p_Val2_21_fu_245_p4 = {{layer15_out_dout[255:248]}};

assign p_Val2_22_fu_595_p4 = {{layer15_out_dout[151:144]}};

assign p_Val2_23_fu_615_p4 = {{layer15_out_dout[159:152]}};

assign p_Val2_27_fu_235_p4 = {{layer15_out_dout[247:240]}};

assign p_Val2_2_fu_435_p4 = {{layer15_out_dout[87:80]}};

assign p_Val2_32_fu_987_p3 = ((icmp_ln1649_16_fu_981_p2[0:0] == 1'b1) ? trunc_ln44_5_fu_425_p4 : 7'd0);

assign p_Val2_33_fu_1015_p3 = ((icmp_ln1649_18_fu_1009_p2[0:0] == 1'b1) ? trunc_ln44_6_fu_465_p4 : 7'd0);

assign p_Val2_34_fu_1043_p3 = ((icmp_ln1649_20_fu_1037_p2[0:0] == 1'b1) ? trunc_ln44_7_fu_505_p4 : 7'd0);

assign p_Val2_35_fu_1071_p3 = ((icmp_ln1649_22_fu_1065_p2[0:0] == 1'b1) ? trunc_ln44_8_fu_545_p4 : 7'd0);

assign p_Val2_36_fu_1099_p3 = ((icmp_ln1649_24_fu_1093_p2[0:0] == 1'b1) ? trunc_ln44_9_fu_585_p4 : 7'd0);

assign p_Val2_37_fu_1127_p3 = ((icmp_ln1649_26_fu_1121_p2[0:0] == 1'b1) ? trunc_ln44_1_fu_625_p4 : 7'd0);

assign p_Val2_38_fu_1155_p3 = ((icmp_ln1649_28_fu_1149_p2[0:0] == 1'b1) ? trunc_ln44_10_fu_665_p4 : 7'd0);

assign p_Val2_39_fu_1183_p3 = ((icmp_ln1649_30_fu_1177_p2[0:0] == 1'b1) ? trunc_ln44_11_fu_705_p4 : 7'd0);

assign p_Val2_3_fu_455_p4 = {{layer15_out_dout[95:88]}};

assign p_Val2_40_fu_1211_p3 = ((icmp_ln1649_32_fu_1205_p2[0:0] == 1'b1) ? trunc_ln44_12_fu_745_p4 : 7'd0);

assign p_Val2_41_fu_1239_p3 = ((icmp_ln1649_34_fu_1233_p2[0:0] == 1'b1) ? trunc_ln44_13_fu_785_p4 : 7'd0);

assign p_Val2_42_fu_1267_p3 = ((icmp_ln1649_36_fu_1261_p2[0:0] == 1'b1) ? trunc_ln44_14_fu_825_p4 : 7'd0);

assign p_Val2_43_fu_1295_p3 = ((icmp_ln1649_38_fu_1289_p2[0:0] == 1'b1) ? trunc_ln1_fu_845_p4 : 7'd0);

assign p_Val2_4_fu_475_p4 = {{layer15_out_dout[103:96]}};

assign p_Val2_5_fu_495_p4 = {{layer15_out_dout[111:104]}};

assign p_Val2_6_fu_515_p4 = {{layer15_out_dout[119:112]}};

assign p_Val2_7_fu_535_p4 = {{layer15_out_dout[127:120]}};

assign p_Val2_8_fu_555_p4 = {{layer15_out_dout[135:128]}};

assign p_Val2_9_fu_575_p4 = {{layer15_out_dout[143:136]}};

assign p_Val2_s_fu_395_p4 = {{layer15_out_dout[71:64]}};

assign select_ln51_10_fu_1001_p3 = ((icmp_ln1649_17_fu_995_p2[0:0] == 1'b1) ? trunc_ln810_1_fu_445_p4 : 7'd0);

assign select_ln51_12_fu_1029_p3 = ((icmp_ln1649_19_fu_1023_p2[0:0] == 1'b1) ? trunc_ln810_2_fu_485_p4 : 7'd0);

assign select_ln51_14_fu_1057_p3 = ((icmp_ln1649_21_fu_1051_p2[0:0] == 1'b1) ? trunc_ln810_3_fu_525_p4 : 7'd0);

assign select_ln51_16_fu_1085_p3 = ((icmp_ln1649_23_fu_1079_p2[0:0] == 1'b1) ? trunc_ln810_4_fu_565_p4 : 7'd0);

assign select_ln51_18_fu_1113_p3 = ((icmp_ln1649_25_fu_1107_p2[0:0] == 1'b1) ? trunc_ln810_5_fu_605_p4 : 7'd0);

assign select_ln51_20_fu_1141_p3 = ((icmp_ln1649_27_fu_1135_p2[0:0] == 1'b1) ? trunc_ln810_6_fu_645_p4 : 7'd0);

assign select_ln51_22_fu_1169_p3 = ((icmp_ln1649_29_fu_1163_p2[0:0] == 1'b1) ? trunc_ln810_7_fu_685_p4 : 7'd0);

assign select_ln51_24_fu_1197_p3 = ((icmp_ln1649_31_fu_1191_p2[0:0] == 1'b1) ? trunc_ln810_8_fu_725_p4 : 7'd0);

assign select_ln51_26_fu_1225_p3 = ((icmp_ln1649_33_fu_1219_p2[0:0] == 1'b1) ? trunc_ln810_9_fu_765_p4 : 7'd0);

assign select_ln51_28_fu_1253_p3 = ((icmp_ln1649_35_fu_1247_p2[0:0] == 1'b1) ? trunc_ln810_s_fu_805_p4 : 7'd0);

assign select_ln51_2_fu_889_p3 = ((icmp_ln1649_9_fu_883_p2[0:0] == 1'b1) ? trunc_ln45_4_fu_285_p4 : 7'd0);

assign select_ln51_30_fu_1281_p3 = ((icmp_ln1649_37_fu_1275_p2[0:0] == 1'b1) ? trunc_ln810_10_fu_835_p4 : 7'd0);

assign select_ln51_4_fu_917_p3 = ((icmp_ln1649_11_fu_911_p2[0:0] == 1'b1) ? trunc_ln45_5_fu_325_p4 : 7'd0);

assign select_ln51_6_fu_945_p3 = ((icmp_ln1649_13_fu_939_p2[0:0] == 1'b1) ? trunc_ln45_6_fu_365_p4 : 7'd0);

assign select_ln51_8_fu_973_p3 = ((icmp_ln1649_15_fu_967_p2[0:0] == 1'b1) ? trunc_ln_fu_405_p4 : 7'd0);

assign select_ln51_fu_861_p3 = ((icmp_ln1649_fu_855_p2[0:0] == 1'b1) ? trunc_ln45_fu_231_p1 : 7'd0);

assign start_out = real_start;

assign trunc_ln1_fu_845_p4 = {{layer15_out_dout[254:248]}};

assign trunc_ln44_10_fu_665_p4 = {{layer15_out_dout[174:168]}};

assign trunc_ln44_11_fu_705_p4 = {{layer15_out_dout[190:184]}};

assign trunc_ln44_12_fu_745_p4 = {{layer15_out_dout[206:200]}};

assign trunc_ln44_13_fu_785_p4 = {{layer15_out_dout[222:216]}};

assign trunc_ln44_14_fu_825_p4 = {{layer15_out_dout[238:232]}};

assign trunc_ln44_1_fu_625_p4 = {{layer15_out_dout[158:152]}};

assign trunc_ln44_2_fu_305_p4 = {{layer15_out_dout[30:24]}};

assign trunc_ln44_3_fu_345_p4 = {{layer15_out_dout[46:40]}};

assign trunc_ln44_4_fu_385_p4 = {{layer15_out_dout[62:56]}};

assign trunc_ln44_5_fu_425_p4 = {{layer15_out_dout[78:72]}};

assign trunc_ln44_6_fu_465_p4 = {{layer15_out_dout[94:88]}};

assign trunc_ln44_7_fu_505_p4 = {{layer15_out_dout[110:104]}};

assign trunc_ln44_8_fu_545_p4 = {{layer15_out_dout[126:120]}};

assign trunc_ln44_9_fu_585_p4 = {{layer15_out_dout[142:136]}};

assign trunc_ln44_s_fu_265_p4 = {{layer15_out_dout[14:8]}};

assign trunc_ln45_4_fu_285_p4 = {{layer15_out_dout[22:16]}};

assign trunc_ln45_5_fu_325_p4 = {{layer15_out_dout[38:32]}};

assign trunc_ln45_6_fu_365_p4 = {{layer15_out_dout[54:48]}};

assign trunc_ln45_fu_231_p1 = layer15_out_dout[6:0];

assign trunc_ln810_10_fu_835_p4 = {{layer15_out_dout[246:240]}};

assign trunc_ln810_1_fu_445_p4 = {{layer15_out_dout[86:80]}};

assign trunc_ln810_2_fu_485_p4 = {{layer15_out_dout[102:96]}};

assign trunc_ln810_3_fu_525_p4 = {{layer15_out_dout[118:112]}};

assign trunc_ln810_4_fu_565_p4 = {{layer15_out_dout[134:128]}};

assign trunc_ln810_5_fu_605_p4 = {{layer15_out_dout[150:144]}};

assign trunc_ln810_6_fu_645_p4 = {{layer15_out_dout[166:160]}};

assign trunc_ln810_7_fu_685_p4 = {{layer15_out_dout[182:176]}};

assign trunc_ln810_8_fu_725_p4 = {{layer15_out_dout[198:192]}};

assign trunc_ln810_9_fu_765_p4 = {{layer15_out_dout[214:208]}};

assign trunc_ln810_s_fu_805_p4 = {{layer15_out_dout[230:224]}};

assign trunc_ln_fu_405_p4 = {{layer15_out_dout[70:64]}};

assign zext_ln1649_10_fu_1363_p1 = select_ln51_20_reg_1568;

assign zext_ln1649_11_fu_1369_p1 = select_ln51_22_reg_1578;

assign zext_ln1649_12_fu_1375_p1 = select_ln51_24_reg_1588;

assign zext_ln1649_13_fu_1381_p1 = select_ln51_26_reg_1598;

assign zext_ln1649_14_fu_1387_p1 = select_ln51_28_reg_1608;

assign zext_ln1649_15_fu_1393_p1 = select_ln51_30_reg_1618;

assign zext_ln1649_1_fu_1309_p1 = select_ln51_2_reg_1478;

assign zext_ln1649_2_fu_1315_p1 = select_ln51_4_reg_1488;

assign zext_ln1649_3_fu_1321_p1 = select_ln51_6_reg_1498;

assign zext_ln1649_4_fu_1327_p1 = select_ln51_8_reg_1508;

assign zext_ln1649_5_fu_1333_p1 = select_ln51_10_reg_1518;

assign zext_ln1649_6_fu_1339_p1 = select_ln51_12_reg_1528;

assign zext_ln1649_7_fu_1345_p1 = select_ln51_14_reg_1538;

assign zext_ln1649_8_fu_1351_p1 = select_ln51_16_reg_1548;

assign zext_ln1649_9_fu_1357_p1 = select_ln51_18_reg_1558;

assign zext_ln1649_fu_1303_p1 = select_ln51_reg_1468;

assign zext_ln51_10_fu_1354_p1 = p_Val2_36_reg_1553;

assign zext_ln51_11_fu_1360_p1 = p_Val2_37_reg_1563;

assign zext_ln51_12_fu_1366_p1 = p_Val2_38_reg_1573;

assign zext_ln51_13_fu_1372_p1 = p_Val2_39_reg_1583;

assign zext_ln51_14_fu_1378_p1 = p_Val2_40_reg_1593;

assign zext_ln51_15_fu_1384_p1 = p_Val2_41_reg_1603;

assign zext_ln51_16_fu_1390_p1 = p_Val2_42_reg_1613;

assign zext_ln51_3_fu_1312_p1 = out_data_data_22_reg_1483;

assign zext_ln51_4_fu_1318_p1 = out_data_data_24_reg_1493;

assign zext_ln51_5_fu_1324_p1 = out_data_data_26_reg_1503;

assign zext_ln51_6_fu_1330_p1 = p_Val2_32_reg_1513;

assign zext_ln51_7_fu_1336_p1 = p_Val2_33_reg_1523;

assign zext_ln51_8_fu_1342_p1 = p_Val2_34_reg_1533;

assign zext_ln51_9_fu_1348_p1 = p_Val2_35_reg_1543;

assign zext_ln51_fu_1306_p1 = out_data_data_20_reg_1473;

endmodule //myproject_relu_array_ap_fixed_32u_array_ap_ufixed_8_2_4_0_0_32u_relu_config17_s
